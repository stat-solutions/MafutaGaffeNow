/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class MoonLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 60;
        this.sizeUnit = 'px';
    }
    /**
     * @return {?}
     */
    createMoonWrapperStyle() {
        return {
            'position': 'relative',
            'width': `${`${this.size + ((this.size / 7) * 2)}${this.sizeUnit}`}`,
            'height': `${`${this.size + ((this.size / 7) * 2)}${this.sizeUnit}`}`,
            'animation': 'loading-moon 0.6s 0s infinite linear',
            'animation-fill-mode': 'forwards'
        };
    }
    /**
     * @return {?}
     */
    createMoonBallStyle() {
        return Object.assign({}, this.createBallStyle(this.size / 7), { 'background-color': `${this.color}`, 'opacity': '0.8', 'position': 'absolute', 'top': `${`${(this.size / 2) - (this.size / 14)}${this.sizeUnit}`}`, 'animation': 'loading-moon 0.6s 0s infinite linear', 'animation-fill-mode': 'forwards' });
    }
    /**
     * @return {?}
     */
    createMoonCircleStyle() {
        return Object.assign({}, this.createBallStyle(this.size), { 'border': `${this.size / 7}px solid ${this.color}`, 'opacity': '0.1' });
    }
    /**
     * @private
     * @param {?} size
     * @return {?}
     */
    createBallStyle(size) {
        return {
            'width': `${`${size}${this.sizeUnit}`}`,
            'height': `${`${size}${this.sizeUnit}`}`,
            'border-radius': '100%',
            'box-sizing': 'content-box'
        };
    }
}
MoonLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-moon-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createMoonWrapperStyle()\">\r\n  <div [ngStyle]=\"createMoonBallStyle()\"></div>\r\n  <div [ngStyle]=\"createMoonCircleStyle()\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-moon{100%{transform:rotate(360deg)}}@keyframes loading-moon{100%{transform:rotate(360deg)}}"]
            }] }
];
/** @nocollapse */
MoonLoaderComponent.ctorParameters = () => [];
MoonLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    MoonLoaderComponent.prototype.color;
    /** @type {?} */
    MoonLoaderComponent.prototype.size;
    /** @type {?} */
    MoonLoaderComponent.prototype.sizeUnit;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9vbi1sb2FkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXNwaW5uZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbW9vbi1sb2FkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQVEvQyxNQUFNLE9BQU8sbUJBQW1CO0lBSzlCO1FBSlMsVUFBSyxHQUFHLG1CQUFtQixDQUFDO1FBQzVCLFNBQUksR0FBRyxFQUFFLENBQUM7UUFDVixhQUFRLEdBQUcsSUFBSSxDQUFDO0lBR3pCLENBQUM7Ozs7SUFFRCxzQkFBc0I7UUFDcEIsT0FBTztZQUNMLFVBQVUsRUFBRSxVQUFVO1lBQ3RCLE9BQU8sRUFBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUU7WUFDcEUsUUFBUSxFQUFFLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUNyRSxXQUFXLEVBQUUsc0NBQXNDO1lBQ25ELHFCQUFxQixFQUFFLFVBQVU7U0FDbEMsQ0FBQztJQUNKLENBQUM7Ozs7SUFFRCxtQkFBbUI7UUFDakIseUJBQ0ssSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxJQUN0QyxrQkFBa0IsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUUsRUFDbkMsU0FBUyxFQUFFLEtBQUssRUFDaEIsVUFBVSxFQUFFLFVBQVUsRUFDdEIsS0FBSyxFQUFFLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxFQUNuRSxXQUFXLEVBQUUsc0NBQXNDLEVBQ25ELHFCQUFxQixFQUFFLFVBQVUsSUFDakM7SUFDSixDQUFDOzs7O0lBRUQscUJBQXFCO1FBQ25CLHlCQUNLLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUNsQyxRQUFRLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsWUFBWSxJQUFJLENBQUMsS0FBSyxFQUFFLEVBQ2xELFNBQVMsRUFBRSxLQUFLLElBQ2hCO0lBQ0osQ0FBQzs7Ozs7O0lBRU8sZUFBZSxDQUFDLElBQVk7UUFDbEMsT0FBTztZQUNMLE9BQU8sRUFBRSxHQUFHLEdBQUcsSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUN2QyxRQUFRLEVBQUUsR0FBRyxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUU7WUFDeEMsZUFBZSxFQUFFLE1BQU07WUFDdkIsWUFBWSxFQUFFLGFBQWE7U0FDNUIsQ0FBQztJQUNKLENBQUM7OztZQWxERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsbU1BQTJDOzthQUU1Qzs7Ozs7b0JBRUUsS0FBSzttQkFDTCxLQUFLO3VCQUNMLEtBQUs7Ozs7SUFGTixvQ0FBcUM7O0lBQ3JDLG1DQUFtQjs7SUFDbkIsdUNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtEaWN0aW9uYXJ5fSBmcm9tICcuLi9kaWN0aW9uYXJ5JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbmd4LW1vb24tbG9hZGVyJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vbW9vbi1sb2FkZXIuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL21vb24tbG9hZGVyLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIE1vb25Mb2FkZXJDb21wb25lbnQge1xyXG4gIEBJbnB1dCgpIGNvbG9yID0gJ3JnYig1NCwgMjE1LCAxODMpJztcclxuICBASW5wdXQoKSBzaXplID0gNjA7XHJcbiAgQElucHV0KCkgc2l6ZVVuaXQgPSAncHgnO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICB9XHJcblxyXG4gIGNyZWF0ZU1vb25XcmFwcGVyU3R5bGUoKTogRGljdGlvbmFyeSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAncG9zaXRpb24nOiAncmVsYXRpdmUnLFxyXG4gICAgICAnd2lkdGgnOiBgJHtgJHt0aGlzLnNpemUgKyAoKHRoaXMuc2l6ZSAvIDcpICogMil9JHt0aGlzLnNpemVVbml0fWB9YCxcclxuICAgICAgJ2hlaWdodCc6IGAke2Ake3RoaXMuc2l6ZSArICgodGhpcy5zaXplIC8gNykgKiAyKX0ke3RoaXMuc2l6ZVVuaXR9YH1gLFxyXG4gICAgICAnYW5pbWF0aW9uJzogJ2xvYWRpbmctbW9vbiAwLjZzIDBzIGluZmluaXRlIGxpbmVhcicsXHJcbiAgICAgICdhbmltYXRpb24tZmlsbC1tb2RlJzogJ2ZvcndhcmRzJ1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZU1vb25CYWxsU3R5bGUoKTogRGljdGlvbmFyeSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAuLi50aGlzLmNyZWF0ZUJhbGxTdHlsZSh0aGlzLnNpemUgLyA3KSxcclxuICAgICAgJ2JhY2tncm91bmQtY29sb3InOiBgJHt0aGlzLmNvbG9yfWAsXHJcbiAgICAgICdvcGFjaXR5JzogJzAuOCcsXHJcbiAgICAgICdwb3NpdGlvbic6ICdhYnNvbHV0ZScsXHJcbiAgICAgICd0b3AnOiBgJHtgJHsodGhpcy5zaXplIC8gMikgLSAodGhpcy5zaXplIC8gMTQpfSR7dGhpcy5zaXplVW5pdH1gfWAsXHJcbiAgICAgICdhbmltYXRpb24nOiAnbG9hZGluZy1tb29uIDAuNnMgMHMgaW5maW5pdGUgbGluZWFyJyxcclxuICAgICAgJ2FuaW1hdGlvbi1maWxsLW1vZGUnOiAnZm9yd2FyZHMnXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlTW9vbkNpcmNsZVN0eWxlKCk6IERpY3Rpb25hcnkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgLi4udGhpcy5jcmVhdGVCYWxsU3R5bGUodGhpcy5zaXplKSxcclxuICAgICAgJ2JvcmRlcic6IGAke3RoaXMuc2l6ZSAvIDd9cHggc29saWQgJHt0aGlzLmNvbG9yfWAsXHJcbiAgICAgICdvcGFjaXR5JzogJzAuMSdcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNyZWF0ZUJhbGxTdHlsZShzaXplOiBudW1iZXIpOiBEaWN0aW9uYXJ5IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICd3aWR0aCc6IGAke2Ake3NpemV9JHt0aGlzLnNpemVVbml0fWB9YCxcclxuICAgICAgJ2hlaWdodCc6IGAke2Ake3NpemV9JHt0aGlzLnNpemVVbml0fWB9YCxcclxuICAgICAgJ2JvcmRlci1yYWRpdXMnOiAnMTAwJScsXHJcbiAgICAgICdib3gtc2l6aW5nJzogJ2NvbnRlbnQtYm94J1xyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19