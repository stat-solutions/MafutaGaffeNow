/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class FadeLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.height = 15;
        this.heightUnit = 'px';
        this.width = 5;
        this.widthUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
        this.radius = 2;
        this.radiusUnit = 'px';
        this.radiusFactor = 20;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    createFadeWrapperStyle() {
        return {
            'position': 'relative',
            'font-size': '0',
            'top': `${this.radiusFactor}px`,
            'left': `${this.radiusFactor}px`,
            'width': `${this.radiusFactor * 3}px`,
            'height': `${this.radiusFactor * 3}px`
        };
    }
    /**
     * @return {?}
     */
    createFadeStyleA() {
        return Object.assign({}, this.createFadeStyle(1), { 'top': `${this.radiusFactor}px`, 'left': '0' });
    }
    /**
     * @return {?}
     */
    createFadeStyleB() {
        return Object.assign({}, this.createFadeStyle(2), { 'top': `${this.createQuarter()}px`, 'left': `${this.createQuarter()}px`, 'transform': 'rotate(-45deg)' });
    }
    /**
     * @return {?}
     */
    createFadeStyleC() {
        return Object.assign({}, this.createFadeStyle(3), { 'top': '0', 'left': `${this.radiusFactor}px`, 'transform': 'rotate(90deg)' });
    }
    /**
     * @return {?}
     */
    createFadeStyleD() {
        return Object.assign({}, this.createFadeStyle(4), { 'top': `${-1 * this.createQuarter()}px`, 'left': `${this.createQuarter()}px`, 'transform': 'rotate(45deg)' });
    }
    /**
     * @return {?}
     */
    createFadeStyleE() {
        return Object.assign({}, this.createFadeStyle(5), { 'top': `${-1 * this.radiusFactor}px`, 'left': '0' });
    }
    /**
     * @return {?}
     */
    createFadeStyleF() {
        return Object.assign({}, this.createFadeStyle(6), { 'top': `${-1 * this.createQuarter()}px`, 'left': `${-1 * this.createQuarter()}px`, 'transform': 'rotate(-45deg)' });
    }
    /**
     * @return {?}
     */
    createFadeStyleG() {
        return Object.assign({}, this.createFadeStyle(7), { 'top': '0', 'left': `${-1 * this.radiusFactor}px`, 'transform': 'rotate(90deg)' });
    }
    /**
     * @return {?}
     */
    createFadeStyleH() {
        return Object.assign({}, this.createFadeStyle(8), { 'top': `${this.createQuarter()}px`, 'left': `${-1 * this.createQuarter()}px`, 'transform': 'rotate(45deg)' });
    }
    /**
     * @private
     * @param {?} index
     * @return {?}
     */
    createFadeStyle(index) {
        return {
            'position': 'absolute',
            'width': `${`${this.width}${this.widthUnit}`}`,
            'height': `${`${this.height}${this.heightUnit}`}`,
            'margin': `${`${this.margin}${this.marginUnit}`}`,
            'background-color': `${this.color}`,
            'border-radius': `${`${this.radius}${this.radiusUnit}`}`,
            'transition': '2s',
            'animation-fill-mode': 'both',
            'animation': `loading-fade 1.2s ${index * 0.12}s infinite ease-in-out`
        };
    }
    /**
     * @private
     * @return {?}
     */
    createQuarter() {
        return (this.radiusFactor / 2) + (this.radiusFactor / 5.5);
    }
}
FadeLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-fade-loader',
                template: "<div class=\"loading\" [ngStyle]=\"createFadeWrapperStyle()\">\r\n  <div [ngStyle]=\"createFadeStyleA()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleB()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleC()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleD()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleE()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleF()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleG()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleH()\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-fade{50%{opacity:.3}100%{opacity:1}}@keyframes loading-fade{50%{opacity:.3}100%{opacity:1}}"]
            }] }
];
/** @nocollapse */
FadeLoaderComponent.ctorParameters = () => [];
FadeLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    height: [{ type: Input }],
    heightUnit: [{ type: Input }],
    width: [{ type: Input }],
    widthUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }],
    radius: [{ type: Input }],
    radiusUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    FadeLoaderComponent.prototype.color;
    /** @type {?} */
    FadeLoaderComponent.prototype.height;
    /** @type {?} */
    FadeLoaderComponent.prototype.heightUnit;
    /** @type {?} */
    FadeLoaderComponent.prototype.width;
    /** @type {?} */
    FadeLoaderComponent.prototype.widthUnit;
    /** @type {?} */
    FadeLoaderComponent.prototype.margin;
    /** @type {?} */
    FadeLoaderComponent.prototype.marginUnit;
    /** @type {?} */
    FadeLoaderComponent.prototype.radius;
    /** @type {?} */
    FadeLoaderComponent.prototype.radiusUnit;
    /**
     * @type {?}
     * @private
     */
    FadeLoaderComponent.prototype.radiusFactor;
}
//# sourceMappingURL=data:application/json;base64,