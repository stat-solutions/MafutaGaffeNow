/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class DotLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 60;
        this.sizeUnit = 'px';
    }
    /**
     * @return {?}
     */
    createDotWrapperStyle() {
        return {
            'position': 'relative',
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'animation-fill-mode': 'forwards',
            'animation': 'loading-rotate 2s 0s infinite linear'
        };
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createDotStyle(index) {
        return {
            'position': 'absolute',
            'top': `${index % 2 ? '0' : 'auto'}`,
            'bottom': `${index % 2 ? 'auto' : '0'}`,
            'height': `${`${this.size / 2}${this.sizeUnit}`}`,
            'width': `${`${this.size / 2}${this.sizeUnit}`}`,
            'background-color': `${this.color}`,
            'border-radius': '100%',
            'animation-fill-mode': 'forwards',
            'animation': `loading-bounce 2s ${index === 2 ? '-1s' : '0s'} infinite linear`
        };
    }
}
DotLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-dot-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createDotWrapperStyle()\">\r\n  <div [ngStyle]=\"createDotStyle(1)\"></div>\r\n  <div [ngStyle]=\"createDotStyle(2)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-rotate{100%{transform:rotate(360deg)}}@keyframes loading-rotate{100%{transform:rotate(360deg)}}@-webkit-keyframes loading-bounce{0%,100%{transform:scale(0)}50%{transform:scale(1)}}@keyframes loading-bounce{0%,100%{transform:scale(0)}50%{transform:scale(1)}}"]
            }] }
];
/** @nocollapse */
DotLoaderComponent.ctorParameters = () => [];
DotLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    DotLoaderComponent.prototype.color;
    /** @type {?} */
    DotLoaderComponent.prototype.size;
    /** @type {?} */
    DotLoaderComponent.prototype.sizeUnit;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG90LWxvYWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtc3Bpbm5lcnMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9kb3QtbG9hZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFRL0MsTUFBTSxPQUFPLGtCQUFrQjtJQUs3QjtRQUpTLFVBQUssR0FBRyxtQkFBbUIsQ0FBQztRQUM1QixTQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ1YsYUFBUSxHQUFHLElBQUksQ0FBQztJQUd6QixDQUFDOzs7O0lBR0QscUJBQXFCO1FBQ25CLE9BQU87WUFDTCxVQUFVLEVBQUUsVUFBVTtZQUN0QixPQUFPLEVBQUUsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQzVDLFFBQVEsRUFBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUU7WUFDN0MscUJBQXFCLEVBQUUsVUFBVTtZQUNqQyxXQUFXLEVBQUUsc0NBQXNDO1NBQ3BELENBQUM7SUFDSixDQUFDOzs7OztJQUVELGNBQWMsQ0FBQyxLQUFhO1FBQzFCLE9BQU87WUFDTCxVQUFVLEVBQUUsVUFBVTtZQUN0QixLQUFLLEVBQUUsR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRTtZQUNwQyxRQUFRLEVBQUUsR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtZQUN2QyxRQUFRLEVBQUUsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUNqRCxPQUFPLEVBQUUsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUNoRCxrQkFBa0IsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDbkMsZUFBZSxFQUFFLE1BQU07WUFDdkIscUJBQXFCLEVBQUUsVUFBVTtZQUNqQyxXQUFXLEVBQUUscUJBQXFCLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxrQkFBa0I7U0FDL0UsQ0FBQztJQUNKLENBQUM7OztZQXBDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtnQkFDMUIsd0xBQTBDOzthQUUzQzs7Ozs7b0JBRUUsS0FBSzttQkFDTCxLQUFLO3VCQUNMLEtBQUs7Ozs7SUFGTixtQ0FBcUM7O0lBQ3JDLGtDQUFtQjs7SUFDbkIsc0NBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtEaWN0aW9uYXJ5fSBmcm9tICcuLi9kaWN0aW9uYXJ5JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbmd4LWRvdC1sb2FkZXInLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9kb3QtbG9hZGVyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9kb3QtbG9hZGVyLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIERvdExvYWRlckNvbXBvbmVudCB7XHJcbiAgQElucHV0KCkgY29sb3IgPSAncmdiKDU0LCAyMTUsIDE4MyknO1xyXG4gIEBJbnB1dCgpIHNpemUgPSA2MDtcclxuICBASW5wdXQoKSBzaXplVW5pdCA9ICdweCc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxuXHJcblxyXG4gIGNyZWF0ZURvdFdyYXBwZXJTdHlsZSgpOiBEaWN0aW9uYXJ5IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICdwb3NpdGlvbic6ICdyZWxhdGl2ZScsXHJcbiAgICAgICd3aWR0aCc6IGAke2Ake3RoaXMuc2l6ZX0ke3RoaXMuc2l6ZVVuaXR9YH1gLFxyXG4gICAgICAnaGVpZ2h0JzogYCR7YCR7dGhpcy5zaXplfSR7dGhpcy5zaXplVW5pdH1gfWAsXHJcbiAgICAgICdhbmltYXRpb24tZmlsbC1tb2RlJzogJ2ZvcndhcmRzJyxcclxuICAgICAgJ2FuaW1hdGlvbic6ICdsb2FkaW5nLXJvdGF0ZSAycyAwcyBpbmZpbml0ZSBsaW5lYXInXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlRG90U3R5bGUoaW5kZXg6IG51bWJlcik6IERpY3Rpb25hcnkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgJ3Bvc2l0aW9uJzogJ2Fic29sdXRlJyxcclxuICAgICAgJ3RvcCc6IGAke2luZGV4ICUgMiA/ICcwJyA6ICdhdXRvJ31gLFxyXG4gICAgICAnYm90dG9tJzogYCR7aW5kZXggJSAyID8gJ2F1dG8nIDogJzAnfWAsXHJcbiAgICAgICdoZWlnaHQnOiBgJHtgJHt0aGlzLnNpemUgLyAyfSR7dGhpcy5zaXplVW5pdH1gfWAsXHJcbiAgICAgICd3aWR0aCc6IGAke2Ake3RoaXMuc2l6ZSAvIDJ9JHt0aGlzLnNpemVVbml0fWB9YCxcclxuICAgICAgJ2JhY2tncm91bmQtY29sb3InOiBgJHt0aGlzLmNvbG9yfWAsXHJcbiAgICAgICdib3JkZXItcmFkaXVzJzogJzEwMCUnLFxyXG4gICAgICAnYW5pbWF0aW9uLWZpbGwtbW9kZSc6ICdmb3J3YXJkcycsXHJcbiAgICAgICdhbmltYXRpb24nOiBgbG9hZGluZy1ib3VuY2UgMnMgJHtpbmRleCA9PT0gMiA/ICctMXMnIDogJzBzJ30gaW5maW5pdGUgbGluZWFyYFxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19