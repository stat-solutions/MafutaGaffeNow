/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class CircleLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 50;
        this.sizeUnit = 'px';
    }
    /**
     * @return {?}
     */
    createCircleWrapperStyle() {
        return {
            'position': 'relative',
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`
        };
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createCircleStyle(index) {
        return {
            'position': 'absolute',
            'height': `${`${this.size * (1 - (index / 10))}${this.sizeUnit}`}`,
            'width': `${`${this.size * (1 - (index / 10))}${this.sizeUnit}`}`,
            'border': `1px solid ${this.color}`,
            'border-radius': '100%',
            'transition': '2s',
            'border-bottom': 'none',
            'border-right': 'none',
            'top': `${(index * 0.7 * 2.5)}%`,
            'left': `${(index * 0.35 * 2.5)}%`,
            'animation-fill-mode': '',
            'animation': `loading-circle 1s ${index * 0.2}s infinite linear`
        };
    }
}
CircleLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-circle-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createCircleWrapperStyle()\">\r\n  <div [ngStyle]=\"createCircleStyle(0)\"></div>\r\n  <div [ngStyle]=\"createCircleStyle(1)\"></div>\r\n  <div [ngStyle]=\"createCircleStyle(2)\"></div>\r\n  <div [ngStyle]=\"createCircleStyle(3)\"></div>\r\n  <div [ngStyle]=\"createCircleStyle(4)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-circle{0%{transform:rotate(0)}50%{transform:rotate(180deg)}100%{transform:rotate(360deg)}}@keyframes loading-circle{0%{transform:rotate(0)}50%{transform:rotate(180deg)}100%{transform:rotate(360deg)}}"]
            }] }
];
/** @nocollapse */
CircleLoaderComponent.ctorParameters = () => [];
CircleLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    CircleLoaderComponent.prototype.color;
    /** @type {?} */
    CircleLoaderComponent.prototype.size;
    /** @type {?} */
    CircleLoaderComponent.prototype.sizeUnit;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2lyY2xlLWxvYWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtc3Bpbm5lcnMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9jaXJjbGUtbG9hZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFRL0MsTUFBTSxPQUFPLHFCQUFxQjtJQUtoQztRQUpTLFVBQUssR0FBRyxtQkFBbUIsQ0FBQztRQUM1QixTQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ1YsYUFBUSxHQUFHLElBQUksQ0FBQztJQUd6QixDQUFDOzs7O0lBRUQsd0JBQXdCO1FBQ3RCLE9BQU87WUFDTCxVQUFVLEVBQUUsVUFBVTtZQUN0QixPQUFPLEVBQUUsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQzVDLFFBQVEsRUFBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUU7U0FDOUMsQ0FBQztJQUNKLENBQUM7Ozs7O0lBRUQsaUJBQWlCLENBQUMsS0FBYTtRQUM3QixPQUFPO1lBQ0wsVUFBVSxFQUFFLFVBQVU7WUFDdEIsUUFBUSxFQUFFLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQ2xFLE9BQU8sRUFBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUNqRSxRQUFRLEVBQUUsYUFBYSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ25DLGVBQWUsRUFBRSxNQUFNO1lBQ3ZCLFlBQVksRUFBRSxJQUFJO1lBQ2xCLGVBQWUsRUFBRSxNQUFNO1lBQ3ZCLGNBQWMsRUFBRSxNQUFNO1lBQ3RCLEtBQUssRUFBRSxHQUFHLENBQUMsS0FBSyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRztZQUNoQyxNQUFNLEVBQUUsR0FBRyxDQUFDLEtBQUssR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDLEdBQUc7WUFDbEMscUJBQXFCLEVBQUUsRUFBRTtZQUN6QixXQUFXLEVBQUUscUJBQXFCLEtBQUssR0FBRyxHQUFHLG1CQUFtQjtTQUNqRSxDQUFDO0lBQ0osQ0FBQzs7O1lBcENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3Qiw2VkFBNkM7O2FBRTlDOzs7OztvQkFFRSxLQUFLO21CQUNMLEtBQUs7dUJBQ0wsS0FBSzs7OztJQUZOLHNDQUFxQzs7SUFDckMscUNBQW1COztJQUNuQix5Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0RpY3Rpb25hcnl9IGZyb20gJy4uL2RpY3Rpb25hcnknO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICduZ3gtY2lyY2xlLWxvYWRlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2NpcmNsZS1sb2FkZXIuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2NpcmNsZS1sb2FkZXIuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ2lyY2xlTG9hZGVyQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSBjb2xvciA9ICdyZ2IoNTQsIDIxNSwgMTgzKSc7XHJcbiAgQElucHV0KCkgc2l6ZSA9IDUwO1xyXG4gIEBJbnB1dCgpIHNpemVVbml0ID0gJ3B4JztcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgfVxyXG5cclxuICBjcmVhdGVDaXJjbGVXcmFwcGVyU3R5bGUoKTogRGljdGlvbmFyeSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAncG9zaXRpb24nOiAncmVsYXRpdmUnLFxyXG4gICAgICAnd2lkdGgnOiBgJHtgJHt0aGlzLnNpemV9JHt0aGlzLnNpemVVbml0fWB9YCxcclxuICAgICAgJ2hlaWdodCc6IGAke2Ake3RoaXMuc2l6ZX0ke3RoaXMuc2l6ZVVuaXR9YH1gXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlQ2lyY2xlU3R5bGUoaW5kZXg6IG51bWJlcik6IERpY3Rpb25hcnkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgJ3Bvc2l0aW9uJzogJ2Fic29sdXRlJyxcclxuICAgICAgJ2hlaWdodCc6IGAke2Ake3RoaXMuc2l6ZSAqICgxIC0gKGluZGV4IC8gMTApKX0ke3RoaXMuc2l6ZVVuaXR9YH1gLFxyXG4gICAgICAnd2lkdGgnOiBgJHtgJHt0aGlzLnNpemUgKiAoMSAtIChpbmRleCAvIDEwKSl9JHt0aGlzLnNpemVVbml0fWB9YCxcclxuICAgICAgJ2JvcmRlcic6IGAxcHggc29saWQgJHt0aGlzLmNvbG9yfWAsXHJcbiAgICAgICdib3JkZXItcmFkaXVzJzogJzEwMCUnLFxyXG4gICAgICAndHJhbnNpdGlvbic6ICcycycsXHJcbiAgICAgICdib3JkZXItYm90dG9tJzogJ25vbmUnLFxyXG4gICAgICAnYm9yZGVyLXJpZ2h0JzogJ25vbmUnLFxyXG4gICAgICAndG9wJzogYCR7KGluZGV4ICogMC43ICogMi41KX0lYCxcclxuICAgICAgJ2xlZnQnOiBgJHsoaW5kZXggKiAwLjM1ICogMi41KX0lYCxcclxuICAgICAgJ2FuaW1hdGlvbi1maWxsLW1vZGUnOiAnJyxcclxuICAgICAgJ2FuaW1hdGlvbic6IGBsb2FkaW5nLWNpcmNsZSAxcyAke2luZGV4ICogMC4yfXMgaW5maW5pdGUgbGluZWFyYFxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19