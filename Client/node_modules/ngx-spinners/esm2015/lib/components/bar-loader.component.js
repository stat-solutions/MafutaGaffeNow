/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { calculateRgba } from '../helpers/helpers';
export class BarLoaderComponent {
    constructor() {
        this.color = '#36d7b7';
        this.width = 100;
        this.widthUnit = 'px';
        this.height = 4;
        this.heightUnit = 'px';
    }
    /**
     * @return {?}
     */
    createBarWrapperStyle() {
        return {
            'position': 'relative',
            'width': `${`${this.width}${this.widthUnit}`}`,
            'height': `${`${this.height}${this.heightUnit}`}`,
            'overflow': 'hidden',
            'background-color': `${calculateRgba(this.color, 0.2)}`,
            'background-clip': 'padding-box',
        };
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createBarStyle(index) {
        return {
            'display': 'block',
            'position': 'absolute',
            'height': `${`${this.height}${this.heightUnit}`}`,
            'overflow': 'hidden',
            'background-color': `${this.color}`,
            'background-clip': 'padding-box',
            'border-radius': '2px',
            'will-change': 'left, right',
            'animation-fill-mode': 'forwards',
            'animation': `${index === 1 ? 'loading-long' : 'loading-short'} 2.1s ${index === 2 ? '1.15s' : ''}
                    ${index === 1 ? 'cubic-bezier(0.65, 0.815, 0.735, 0.395)' : 'cubic-bezier(0.165, 0.84, 0.44, 1)'} infinite`
        };
    }
}
BarLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-bar-loader',
                template: "<div class=\"loading\" [ngStyle]=\"createBarWrapperStyle()\">\r\n  <div [ngStyle]=\"createBarStyle(1)\"></div>\r\n  <div [ngStyle]=\"createBarStyle(2)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-long{0%{left:-35%;right:100%}100%,60%{left:100%;right:-90%}}@keyframes loading-long{0%{left:-35%;right:100%}100%,60%{left:100%;right:-90%}}@-webkit-keyframes loading-short{0%{left:-200%;right:100%}100%,60%{left:107%;right:-8%}}@keyframes loading-short{0%{left:-200%;right:100%}100%,60%{left:107%;right:-8%}}"]
            }] }
];
/** @nocollapse */
BarLoaderComponent.ctorParameters = () => [];
BarLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    width: [{ type: Input }],
    widthUnit: [{ type: Input }],
    height: [{ type: Input }],
    heightUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    BarLoaderComponent.prototype.color;
    /** @type {?} */
    BarLoaderComponent.prototype.width;
    /** @type {?} */
    BarLoaderComponent.prototype.widthUnit;
    /** @type {?} */
    BarLoaderComponent.prototype.height;
    /** @type {?} */
    BarLoaderComponent.prototype.heightUnit;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyLWxvYWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtc3Bpbm5lcnMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9iYXItbG9hZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFL0MsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBT2pELE1BQU0sT0FBTyxrQkFBa0I7SUFPN0I7UUFOUyxVQUFLLEdBQUcsU0FBUyxDQUFDO1FBQ2xCLFVBQUssR0FBRyxHQUFHLENBQUM7UUFDWixjQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLFdBQU0sR0FBRyxDQUFDLENBQUM7UUFDWCxlQUFVLEdBQUcsSUFBSSxDQUFDO0lBRzNCLENBQUM7Ozs7SUFHRCxxQkFBcUI7UUFDbkIsT0FBTztZQUNMLFVBQVUsRUFBRSxVQUFVO1lBQ3RCLE9BQU8sRUFBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsU0FBUyxFQUFFLEVBQUU7WUFDOUMsUUFBUSxFQUFFLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsRUFBRTtZQUNqRCxVQUFVLEVBQUUsUUFBUTtZQUNwQixrQkFBa0IsRUFBRSxHQUFHLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxFQUFFO1lBQ3ZELGlCQUFpQixFQUFFLGFBQWE7U0FDakMsQ0FBQztJQUNKLENBQUM7Ozs7O0lBRUQsY0FBYyxDQUFDLEtBQWE7UUFDMUIsT0FBTztZQUNMLFNBQVMsRUFBRSxPQUFPO1lBQ2xCLFVBQVUsRUFBRSxVQUFVO1lBQ3RCLFFBQVEsRUFBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLEVBQUU7WUFDakQsVUFBVSxFQUFFLFFBQVE7WUFDcEIsa0JBQWtCLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ25DLGlCQUFpQixFQUFFLGFBQWE7WUFDaEMsZUFBZSxFQUFFLEtBQUs7WUFDdEIsYUFBYSxFQUFFLGFBQWE7WUFDNUIscUJBQXFCLEVBQUUsVUFBVTtZQUNqQyxXQUFXLEVBQUUsR0FBRyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLGVBQWUsU0FBUyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUU7c0JBQ2pGLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLHlDQUF5QyxDQUFDLENBQUMsQ0FBQyxvQ0FBb0MsV0FBVztTQUMxSCxDQUFDO0lBQ0osQ0FBQzs7O1lBekNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQix5TEFBMEM7O2FBRTNDOzs7OztvQkFFRSxLQUFLO29CQUNMLEtBQUs7d0JBQ0wsS0FBSztxQkFDTCxLQUFLO3lCQUNMLEtBQUs7Ozs7SUFKTixtQ0FBMkI7O0lBQzNCLG1DQUFxQjs7SUFDckIsdUNBQTBCOztJQUMxQixvQ0FBb0I7O0lBQ3BCLHdDQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7RGljdGlvbmFyeX0gZnJvbSAnLi4vZGljdGlvbmFyeSc7XHJcbmltcG9ydCB7Y2FsY3VsYXRlUmdiYX0gZnJvbSAnLi4vaGVscGVycy9oZWxwZXJzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbmd4LWJhci1sb2FkZXInLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9iYXItbG9hZGVyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9iYXItbG9hZGVyLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEJhckxvYWRlckNvbXBvbmVudCB7XHJcbiAgQElucHV0KCkgY29sb3IgPSAnIzM2ZDdiNyc7XHJcbiAgQElucHV0KCkgd2lkdGggPSAxMDA7XHJcbiAgQElucHV0KCkgd2lkdGhVbml0ID0gJ3B4JztcclxuICBASW5wdXQoKSBoZWlnaHQgPSA0O1xyXG4gIEBJbnB1dCgpIGhlaWdodFVuaXQgPSAncHgnO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICB9XHJcblxyXG5cclxuICBjcmVhdGVCYXJXcmFwcGVyU3R5bGUoKTogRGljdGlvbmFyeSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAncG9zaXRpb24nOiAncmVsYXRpdmUnLFxyXG4gICAgICAnd2lkdGgnOiBgJHtgJHt0aGlzLndpZHRofSR7dGhpcy53aWR0aFVuaXR9YH1gLFxyXG4gICAgICAnaGVpZ2h0JzogYCR7YCR7dGhpcy5oZWlnaHR9JHt0aGlzLmhlaWdodFVuaXR9YH1gLFxyXG4gICAgICAnb3ZlcmZsb3cnOiAnaGlkZGVuJyxcclxuICAgICAgJ2JhY2tncm91bmQtY29sb3InOiBgJHtjYWxjdWxhdGVSZ2JhKHRoaXMuY29sb3IsIDAuMil9YCxcclxuICAgICAgJ2JhY2tncm91bmQtY2xpcCc6ICdwYWRkaW5nLWJveCcsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlQmFyU3R5bGUoaW5kZXg6IG51bWJlcikge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgJ2Rpc3BsYXknOiAnYmxvY2snLFxyXG4gICAgICAncG9zaXRpb24nOiAnYWJzb2x1dGUnLFxyXG4gICAgICAnaGVpZ2h0JzogYCR7YCR7dGhpcy5oZWlnaHR9JHt0aGlzLmhlaWdodFVuaXR9YH1gLFxyXG4gICAgICAnb3ZlcmZsb3cnOiAnaGlkZGVuJyxcclxuICAgICAgJ2JhY2tncm91bmQtY29sb3InOiBgJHt0aGlzLmNvbG9yfWAsXHJcbiAgICAgICdiYWNrZ3JvdW5kLWNsaXAnOiAncGFkZGluZy1ib3gnLFxyXG4gICAgICAnYm9yZGVyLXJhZGl1cyc6ICcycHgnLFxyXG4gICAgICAnd2lsbC1jaGFuZ2UnOiAnbGVmdCwgcmlnaHQnLFxyXG4gICAgICAnYW5pbWF0aW9uLWZpbGwtbW9kZSc6ICdmb3J3YXJkcycsXHJcbiAgICAgICdhbmltYXRpb24nOiBgJHtpbmRleCA9PT0gMSA/ICdsb2FkaW5nLWxvbmcnIDogJ2xvYWRpbmctc2hvcnQnfSAyLjFzICR7aW5kZXggPT09IDIgPyAnMS4xNXMnIDogJyd9XHJcbiAgICAgICAgICAgICAgICAgICAgJHtpbmRleCA9PT0gMSA/ICdjdWJpYy1iZXppZXIoMC42NSwgMC44MTUsIDAuNzM1LCAwLjM5NSknIDogJ2N1YmljLWJlemllcigwLjE2NSwgMC44NCwgMC40NCwgMSknfSBpbmZpbml0ZWBcclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==