/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
export class RiseLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 15;
        this.sizeUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createRiseStyle(index) {
        return {
            'display': 'inline-block',
            'border-radius': '100%',
            'background-color': `${this.color}`,
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'margin': `${`${this.margin}${this.marginUnit}`}`,
            'animation': `${index % 2 === 0 ? 'loading-rise-even' : 'loading-rise-odd'} 1s 0s infinite cubic-bezier(.15,.46,.9,.6)`,
            'animation-fill-mode': 'both'
        };
    }
}
RiseLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-rise-loader',
                template: "<div class=\"loader\">\r\n  <div [ngStyle]=\"createRiseStyle(1)\"></div>\r\n  <div [ngStyle]=\"createRiseStyle(2)\"></div>\r\n  <div [ngStyle]=\"createRiseStyle(3)\"></div>\r\n  <div [ngStyle]=\"createRiseStyle(4)\"></div>\r\n  <div [ngStyle]=\"createRiseStyle(5)\"></div>\r\n</div>\r\n",
                encapsulation: ViewEncapsulation.ShadowDom,
                styles: [":host{--riseAmount:30px}@-webkit-keyframes loading-rise-even{0%{transform:scale(1.1)}50%{transform:scale(.4)}75%{transform:translateY(var(--riseAmount))}100%{transform:translateY(0) scale(1)}}@keyframes loading-rise-even{0%{transform:scale(1.1)}50%{transform:scale(.4)}75%{transform:translateY(var(--riseAmount))}100%{transform:translateY(0) scale(1)}}@-webkit-keyframes loading-rise-odd{0%{transform:scale(.4)}50%{transform:scale(1.1)}75%{transform:translateY(calc(-1 * var(--riseAmount)))}100%{transform:translateY(0) scale(.75)}}@keyframes loading-rise-odd{0%{transform:scale(.4)}50%{transform:scale(1.1)}75%{transform:translateY(calc(-1 * var(--riseAmount)))}100%{transform:translateY(0) scale(.75)}}"]
            }] }
];
/** @nocollapse */
RiseLoaderComponent.ctorParameters = () => [];
RiseLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    RiseLoaderComponent.prototype.color;
    /** @type {?} */
    RiseLoaderComponent.prototype.size;
    /** @type {?} */
    RiseLoaderComponent.prototype.sizeUnit;
    /** @type {?} */
    RiseLoaderComponent.prototype.margin;
    /** @type {?} */
    RiseLoaderComponent.prototype.marginUnit;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmlzZS1sb2FkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXNwaW5uZXJzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcmlzZS1sb2FkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQVNsRSxNQUFNLE9BQU8sbUJBQW1CO0lBTTlCO1FBTFMsVUFBSyxHQUFHLG1CQUFtQixDQUFDO1FBQzVCLFNBQUksR0FBRyxFQUFFLENBQUM7UUFDVixhQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLFdBQU0sR0FBRyxDQUFDLENBQUM7UUFDWCxlQUFVLEdBQUcsSUFBSSxDQUFDO0lBRTNCLENBQUM7Ozs7O0lBRUQsZUFBZSxDQUFDLEtBQWE7UUFDM0IsT0FBTztZQUNMLFNBQVMsRUFBRSxjQUFjO1lBQ3pCLGVBQWUsRUFBRSxNQUFNO1lBQ3ZCLGtCQUFrQixFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNuQyxPQUFPLEVBQUUsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQzVDLFFBQVEsRUFBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUU7WUFDN0MsUUFBUSxFQUFFLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsRUFBRTtZQUNqRCxXQUFXLEVBQUUsR0FBRyxLQUFLLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLGtCQUFrQiw2Q0FBNkM7WUFDdkgscUJBQXFCLEVBQUUsTUFBTTtTQUM5QixDQUFDO0lBQ0osQ0FBQzs7O1lBMUJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQiwwU0FBMkM7Z0JBRTNDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxTQUFTOzthQUMzQzs7Ozs7b0JBRUUsS0FBSzttQkFDTCxLQUFLO3VCQUNMLEtBQUs7cUJBQ0wsS0FBSzt5QkFDTCxLQUFLOzs7O0lBSk4sb0NBQXFDOztJQUNyQyxtQ0FBbUI7O0lBQ25CLHVDQUF5Qjs7SUFDekIscUNBQW9COztJQUNwQix5Q0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9ufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtEaWN0aW9uYXJ5fSBmcm9tICcuLi9kaWN0aW9uYXJ5JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbmd4LXJpc2UtbG9hZGVyJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vcmlzZS1sb2FkZXIuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3Jpc2UtbG9hZGVyLmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uU2hhZG93RG9tXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBSaXNlTG9hZGVyQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSBjb2xvciA9ICdyZ2IoNTQsIDIxNSwgMTgzKSc7XHJcbiAgQElucHV0KCkgc2l6ZSA9IDE1O1xyXG4gIEBJbnB1dCgpIHNpemVVbml0ID0gJ3B4JztcclxuICBASW5wdXQoKSBtYXJnaW4gPSAyO1xyXG4gIEBJbnB1dCgpIG1hcmdpblVuaXQgPSAncHgnO1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlUmlzZVN0eWxlKGluZGV4OiBudW1iZXIpOiBEaWN0aW9uYXJ5IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICdkaXNwbGF5JzogJ2lubGluZS1ibG9jaycsXHJcbiAgICAgICdib3JkZXItcmFkaXVzJzogJzEwMCUnLFxyXG4gICAgICAnYmFja2dyb3VuZC1jb2xvcic6IGAke3RoaXMuY29sb3J9YCxcclxuICAgICAgJ3dpZHRoJzogYCR7YCR7dGhpcy5zaXplfSR7dGhpcy5zaXplVW5pdH1gfWAsXHJcbiAgICAgICdoZWlnaHQnOiBgJHtgJHt0aGlzLnNpemV9JHt0aGlzLnNpemVVbml0fWB9YCxcclxuICAgICAgJ21hcmdpbic6IGAke2Ake3RoaXMubWFyZ2lufSR7dGhpcy5tYXJnaW5Vbml0fWB9YCxcclxuICAgICAgJ2FuaW1hdGlvbic6IGAke2luZGV4ICUgMiA9PT0gMCA/ICdsb2FkaW5nLXJpc2UtZXZlbicgOiAnbG9hZGluZy1yaXNlLW9kZCd9IDFzIDBzIGluZmluaXRlIGN1YmljLWJlemllciguMTUsLjQ2LC45LC42KWAsXHJcbiAgICAgICdhbmltYXRpb24tZmlsbC1tb2RlJzogJ2JvdGgnXHJcbiAgICB9O1xyXG4gIH1cclxufVxyXG4iXX0=