/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class PulseLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 15;
        this.sizeUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createPulseStyle(index) {
        return {
            'display': 'inline-block',
            'background-color': `${this.color}`,
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'margin': `${`${this.margin}${this.marginUnit}`}`,
            'border-radius': '100%',
            'animation': `loading-pulse 0.75s ${index * 0.12}s infinite cubic-bezier(.2,.68,.18,1.08)`,
            'animation-fill-mode': 'both'
        };
    }
}
PulseLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-pulse-loader',
                template: "<div class=\"loader\">\r\n  <div [ngStyle]=\"createPulseStyle(1)\"></div>\r\n  <div [ngStyle]=\"createPulseStyle(2)\"></div>\r\n  <div [ngStyle]=\"createPulseStyle(3)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-pulse{0%,80%{transform:scale(1);opacity:1}45%{transform:scale(.1);opacity:.7}}@keyframes loading-pulse{0%,80%{transform:scale(1);opacity:1}45%{transform:scale(.1);opacity:.7}}"]
            }] }
];
/** @nocollapse */
PulseLoaderComponent.ctorParameters = () => [];
PulseLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    PulseLoaderComponent.prototype.color;
    /** @type {?} */
    PulseLoaderComponent.prototype.size;
    /** @type {?} */
    PulseLoaderComponent.prototype.sizeUnit;
    /** @type {?} */
    PulseLoaderComponent.prototype.margin;
    /** @type {?} */
    PulseLoaderComponent.prototype.marginUnit;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVsc2UtbG9hZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1zcGlubmVycy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3B1bHNlLWxvYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBUS9DLE1BQU0sT0FBTyxvQkFBb0I7SUFPL0I7UUFOUyxVQUFLLEdBQUcsbUJBQW1CLENBQUM7UUFDNUIsU0FBSSxHQUFHLEVBQUUsQ0FBQztRQUNWLGFBQVEsR0FBRyxJQUFJLENBQUM7UUFDaEIsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUNYLGVBQVUsR0FBRyxJQUFJLENBQUM7SUFHM0IsQ0FBQzs7Ozs7SUFFRCxnQkFBZ0IsQ0FBQyxLQUFhO1FBQzVCLE9BQU87WUFDTCxTQUFTLEVBQUUsY0FBYztZQUN6QixrQkFBa0IsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDbkMsT0FBTyxFQUFFLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUM1QyxRQUFRLEVBQUUsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQzdDLFFBQVEsRUFBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLEVBQUU7WUFDakQsZUFBZSxFQUFFLE1BQU07WUFDdkIsV0FBVyxFQUFFLHVCQUF1QixLQUFLLEdBQUcsSUFBSSwwQ0FBMEM7WUFDMUYscUJBQXFCLEVBQUUsTUFBTTtTQUM5QixDQUFDO0lBQ0osQ0FBQzs7O1lBMUJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1Qix5TUFBNEM7O2FBRTdDOzs7OztvQkFFRSxLQUFLO21CQUNMLEtBQUs7dUJBQ0wsS0FBSztxQkFDTCxLQUFLO3lCQUNMLEtBQUs7Ozs7SUFKTixxQ0FBcUM7O0lBQ3JDLG9DQUFtQjs7SUFDbkIsd0NBQXlCOztJQUN6QixzQ0FBb0I7O0lBQ3BCLDBDQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7RGljdGlvbmFyeX0gZnJvbSAnLi4vZGljdGlvbmFyeSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ25neC1wdWxzZS1sb2FkZXInLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wdWxzZS1sb2FkZXIuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3B1bHNlLWxvYWRlci5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQdWxzZUxvYWRlckNvbXBvbmVudCB7XHJcbiAgQElucHV0KCkgY29sb3IgPSAncmdiKDU0LCAyMTUsIDE4MyknO1xyXG4gIEBJbnB1dCgpIHNpemUgPSAxNTtcclxuICBASW5wdXQoKSBzaXplVW5pdCA9ICdweCc7XHJcbiAgQElucHV0KCkgbWFyZ2luID0gMjtcclxuICBASW5wdXQoKSBtYXJnaW5Vbml0ID0gJ3B4JztcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgfVxyXG5cclxuICBjcmVhdGVQdWxzZVN0eWxlKGluZGV4OiBudW1iZXIpOiBEaWN0aW9uYXJ5IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICdkaXNwbGF5JzogJ2lubGluZS1ibG9jaycsXHJcbiAgICAgICdiYWNrZ3JvdW5kLWNvbG9yJzogYCR7dGhpcy5jb2xvcn1gLFxyXG4gICAgICAnd2lkdGgnOiBgJHtgJHt0aGlzLnNpemV9JHt0aGlzLnNpemVVbml0fWB9YCxcclxuICAgICAgJ2hlaWdodCc6IGAke2Ake3RoaXMuc2l6ZX0ke3RoaXMuc2l6ZVVuaXR9YH1gLFxyXG4gICAgICAnbWFyZ2luJzogYCR7YCR7dGhpcy5tYXJnaW59JHt0aGlzLm1hcmdpblVuaXR9YH1gLFxyXG4gICAgICAnYm9yZGVyLXJhZGl1cyc6ICcxMDAlJyxcclxuICAgICAgJ2FuaW1hdGlvbic6IGBsb2FkaW5nLXB1bHNlIDAuNzVzICR7aW5kZXggKiAwLjEyfXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKC4yLC42OCwuMTgsMS4wOClgLFxyXG4gICAgICAnYW5pbWF0aW9uLWZpbGwtbW9kZSc6ICdib3RoJ1xyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19