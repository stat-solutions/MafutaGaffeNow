/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
var ScaleLoaderComponent = /** @class */ (function () {
    function ScaleLoaderComponent() {
        this.color = 'rgb(54, 215, 183)';
        this.width = 4;
        this.widthUnit = 'px';
        this.height = 35;
        this.heightUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
        this.radius = 2;
        this.radiusUnit = 'px';
    }
    /**
     * @param {?} index
     * @return {?}
     */
    ScaleLoaderComponent.prototype.createScaleStyle = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        return {
            'display': 'inline-block',
            'background-color': "" + this.color,
            'width': "" + ("" + this.width + this.widthUnit),
            'height': "" + ("" + this.height + this.heightUnit),
            'margin': "" + ("" + this.margin + this.marginUnit),
            'border-radius': "" + ("" + this.radius + this.radiusUnit),
            'animation': "loading-scale 1s " + index * 0.1 + "s infinite cubic-bezier(.2,.68,.18,1.08)",
            'animation-fill-mode': 'both'
        };
    };
    ScaleLoaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-scale-loader',
                    template: "<div class=\"loader\">\r\n  <div [ngStyle]=\"createScaleStyle(1)\"></div>\r\n  <div [ngStyle]=\"createScaleStyle(2)\"></div>\r\n  <div [ngStyle]=\"createScaleStyle(3)\"></div>\r\n  <div [ngStyle]=\"createScaleStyle(4)\"></div>\r\n  <div [ngStyle]=\"createScaleStyle(5)\"></div>\r\n</div>\r\n",
                    styles: ["@-webkit-keyframes loading-scale{0%,100%{transform:scaleY(1)}50%{transform:scaleY(.4)}}@keyframes loading-scale{0%,100%{transform:scaleY(1)}50%{transform:scaleY(.4)}}"]
                }] }
    ];
    /** @nocollapse */
    ScaleLoaderComponent.ctorParameters = function () { return []; };
    ScaleLoaderComponent.propDecorators = {
        color: [{ type: Input }],
        width: [{ type: Input }],
        widthUnit: [{ type: Input }],
        height: [{ type: Input }],
        heightUnit: [{ type: Input }],
        margin: [{ type: Input }],
        marginUnit: [{ type: Input }],
        radius: [{ type: Input }],
        radiusUnit: [{ type: Input }]
    };
    return ScaleLoaderComponent;
}());
export { ScaleLoaderComponent };
if (false) {
    /** @type {?} */
    ScaleLoaderComponent.prototype.color;
    /** @type {?} */
    ScaleLoaderComponent.prototype.width;
    /** @type {?} */
    ScaleLoaderComponent.prototype.widthUnit;
    /** @type {?} */
    ScaleLoaderComponent.prototype.height;
    /** @type {?} */
    ScaleLoaderComponent.prototype.heightUnit;
    /** @type {?} */
    ScaleLoaderComponent.prototype.margin;
    /** @type {?} */
    ScaleLoaderComponent.prototype.marginUnit;
    /** @type {?} */
    ScaleLoaderComponent.prototype.radius;
    /** @type {?} */
    ScaleLoaderComponent.prototype.radiusUnit;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NhbGUtbG9hZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1zcGlubmVycy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3NjYWxlLWxvYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRy9DO0lBZUU7UUFUUyxVQUFLLEdBQUcsbUJBQW1CLENBQUM7UUFDNUIsVUFBSyxHQUFHLENBQUMsQ0FBQztRQUNWLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFDakIsV0FBTSxHQUFHLEVBQUUsQ0FBQztRQUNaLGVBQVUsR0FBRyxJQUFJLENBQUM7UUFDbEIsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUNYLGVBQVUsR0FBRyxJQUFJLENBQUM7UUFDbEIsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUNYLGVBQVUsR0FBRyxJQUFJLENBQUM7SUFFM0IsQ0FBQzs7Ozs7SUFFRCwrQ0FBZ0I7Ozs7SUFBaEIsVUFBaUIsS0FBYTtRQUM1QixPQUFPO1lBQ0wsU0FBUyxFQUFFLGNBQWM7WUFDekIsa0JBQWtCLEVBQUUsS0FBRyxJQUFJLENBQUMsS0FBTztZQUNuQyxPQUFPLEVBQUUsTUFBRyxLQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVcsQ0FBRTtZQUM5QyxRQUFRLEVBQUUsTUFBRyxLQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFVBQVksQ0FBRTtZQUNqRCxRQUFRLEVBQUUsTUFBRyxLQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFVBQVksQ0FBRTtZQUNqRCxlQUFlLEVBQUUsTUFBRyxLQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFVBQVksQ0FBRTtZQUN4RCxXQUFXLEVBQUUsc0JBQW9CLEtBQUssR0FBRyxHQUFHLDZDQUEwQztZQUN0RixxQkFBcUIsRUFBRSxNQUFNO1NBQzlCLENBQUM7SUFDSixDQUFDOztnQkE3QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLCtTQUE0Qzs7aUJBRTdDOzs7Ozt3QkFFRSxLQUFLO3dCQUNMLEtBQUs7NEJBQ0wsS0FBSzt5QkFDTCxLQUFLOzZCQUNMLEtBQUs7eUJBQ0wsS0FBSzs2QkFDTCxLQUFLO3lCQUNMLEtBQUs7NkJBQ0wsS0FBSzs7SUFnQlIsMkJBQUM7Q0FBQSxBQTlCRCxJQThCQztTQXpCWSxvQkFBb0I7OztJQUMvQixxQ0FBcUM7O0lBQ3JDLHFDQUFtQjs7SUFDbkIseUNBQTBCOztJQUMxQixzQ0FBcUI7O0lBQ3JCLDBDQUEyQjs7SUFDM0Isc0NBQW9COztJQUNwQiwwQ0FBMkI7O0lBQzNCLHNDQUFvQjs7SUFDcEIsMENBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtEaWN0aW9uYXJ5fSBmcm9tICcuLi9kaWN0aW9uYXJ5JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbmd4LXNjYWxlLWxvYWRlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3NjYWxlLWxvYWRlci5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vc2NhbGUtbG9hZGVyLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFNjYWxlTG9hZGVyQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSBjb2xvciA9ICdyZ2IoNTQsIDIxNSwgMTgzKSc7XHJcbiAgQElucHV0KCkgd2lkdGggPSA0O1xyXG4gIEBJbnB1dCgpIHdpZHRoVW5pdCA9ICdweCc7XHJcbiAgQElucHV0KCkgaGVpZ2h0ID0gMzU7XHJcbiAgQElucHV0KCkgaGVpZ2h0VW5pdCA9ICdweCc7XHJcbiAgQElucHV0KCkgbWFyZ2luID0gMjtcclxuICBASW5wdXQoKSBtYXJnaW5Vbml0ID0gJ3B4JztcclxuICBASW5wdXQoKSByYWRpdXMgPSAyO1xyXG4gIEBJbnB1dCgpIHJhZGl1c1VuaXQgPSAncHgnO1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlU2NhbGVTdHlsZShpbmRleDogbnVtYmVyKTogRGljdGlvbmFyeSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAnZGlzcGxheSc6ICdpbmxpbmUtYmxvY2snLFxyXG4gICAgICAnYmFja2dyb3VuZC1jb2xvcic6IGAke3RoaXMuY29sb3J9YCxcclxuICAgICAgJ3dpZHRoJzogYCR7YCR7dGhpcy53aWR0aH0ke3RoaXMud2lkdGhVbml0fWB9YCxcclxuICAgICAgJ2hlaWdodCc6IGAke2Ake3RoaXMuaGVpZ2h0fSR7dGhpcy5oZWlnaHRVbml0fWB9YCxcclxuICAgICAgJ21hcmdpbic6IGAke2Ake3RoaXMubWFyZ2lufSR7dGhpcy5tYXJnaW5Vbml0fWB9YCxcclxuICAgICAgJ2JvcmRlci1yYWRpdXMnOiBgJHtgJHt0aGlzLnJhZGl1c30ke3RoaXMucmFkaXVzVW5pdH1gfWAsXHJcbiAgICAgICdhbmltYXRpb24nOiBgbG9hZGluZy1zY2FsZSAxcyAke2luZGV4ICogMC4xfXMgaW5maW5pdGUgY3ViaWMtYmV6aWVyKC4yLC42OCwuMTgsMS4wOClgLFxyXG4gICAgICAnYW5pbWF0aW9uLWZpbGwtbW9kZSc6ICdib3RoJ1xyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19