import { Component, Input, ViewEncapsulation, ElementRef, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class SyncLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 15;
        this.sizeUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createBallStyle(index) {
        return {
            'display': 'inline-block',
            'background-color': `${this.color}`,
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'margin': `${`${this.margin}${this.marginUnit}`}`,
            'border-radius': '100%',
            'animation': `loading-sync 0.6s ${index * 0.07}s infinite ease-in-out`,
            'animation-fill-mode': 'both'
        };
    }
}
SyncLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-sync-loader',
                template: "<div class=\"loader\">\r\n  <div [ngStyle]=\"createBallStyle(1)\"></div>\r\n  <div [ngStyle]=\"createBallStyle(2)\"></div>\r\n  <div [ngStyle]=\"createBallStyle(3)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-sync{33%{transform:translateY(10px)}66%{transform:translateY(-10px)}100%{transform:translateY(0)}}@keyframes loading-sync{33%{transform:translateY(10px)}66%{transform:translateY(-10px)}100%{transform:translateY(0)}}"]
            }] }
];
/** @nocollapse */
SyncLoaderComponent.ctorParameters = () => [];
SyncLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SyncLoaderComponent.prototype.color;
    /** @type {?} */
    SyncLoaderComponent.prototype.size;
    /** @type {?} */
    SyncLoaderComponent.prototype.sizeUnit;
    /** @type {?} */
    SyncLoaderComponent.prototype.margin;
    /** @type {?} */
    SyncLoaderComponent.prototype.marginUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class SquareLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 15;
        this.sizeUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
    }
    /**
     * @return {?}
     */
    createBoxStyle() {
        return {
            'display': 'inline-block',
            'background-color': `${this.color}`,
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'animation': 'loading-square 3s 0s infinite cubic-bezier(.09,.57,.49,.9)',
            'animation-fill-mode': 'both'
        };
    }
}
SquareLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-square-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createBoxStyle()\"></div>\r\n",
                styles: ["@-webkit-keyframes loading-square{25%{transform:rotateX(180deg) rotateY(0)}50%{transform:rotateX(180deg) rotateY(180deg)}75%{transform:rotateX(0) rotateY(180deg)}100%{transform:rotateX(0) rotateY(0)}}@keyframes loading-square{25%{transform:rotateX(180deg) rotateY(0)}50%{transform:rotateX(180deg) rotateY(180deg)}75%{transform:rotateX(0) rotateY(180deg)}100%{transform:rotateX(0) rotateY(0)}}"]
            }] }
];
/** @nocollapse */
SquareLoaderComponent.ctorParameters = () => [];
SquareLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SquareLoaderComponent.prototype.color;
    /** @type {?} */
    SquareLoaderComponent.prototype.size;
    /** @type {?} */
    SquareLoaderComponent.prototype.sizeUnit;
    /** @type {?} */
    SquareLoaderComponent.prototype.margin;
    /** @type {?} */
    SquareLoaderComponent.prototype.marginUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class SkewLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 15;
        this.sizeUnit = 'px';
    }
    /**
     * @return {?}
     */
    createSkewStyle() {
        return {
            'display': 'inline-block',
            'width': '0',
            'height': '0',
            'border-left': `${`${this.size}${this.sizeUnit}`} solid transparent`,
            'border-right': `${`${this.size}${this.sizeUnit}`} solid transparent`,
            'border-bottom': `${`${this.size}${this.sizeUnit}`} solid ${this.color}`,
            'animation': 'loading-skew 3s 0s infinite cubic-bezier(.09,.57,.49,.9)',
            'animation-fill-mode': 'both'
        };
    }
}
SkewLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-skew-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createSkewStyle()\"></div>\r\n",
                styles: ["@-webkit-keyframes loading-skew{25%{transform:perspective(100px) rotateX(180deg) rotateY(0)}50%{transform:perspective(100px) rotateX(180deg) rotateY(180deg)}75%{transform:perspective(100px) rotateX(0) rotateY(180deg)}100%{transform:perspective(100px) rotateX(0) rotateY(0)}}@keyframes loading-skew{25%{transform:perspective(100px) rotateX(180deg) rotateY(0)}50%{transform:perspective(100px) rotateX(180deg) rotateY(180deg)}75%{transform:perspective(100px) rotateX(0) rotateY(180deg)}100%{transform:perspective(100px) rotateX(0) rotateY(0)}}"]
            }] }
];
/** @nocollapse */
SkewLoaderComponent.ctorParameters = () => [];
SkewLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SkewLoaderComponent.prototype.color;
    /** @type {?} */
    SkewLoaderComponent.prototype.size;
    /** @type {?} */
    SkewLoaderComponent.prototype.sizeUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ScaleLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.width = 4;
        this.widthUnit = 'px';
        this.height = 35;
        this.heightUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
        this.radius = 2;
        this.radiusUnit = 'px';
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createScaleStyle(index) {
        return {
            'display': 'inline-block',
            'background-color': `${this.color}`,
            'width': `${`${this.width}${this.widthUnit}`}`,
            'height': `${`${this.height}${this.heightUnit}`}`,
            'margin': `${`${this.margin}${this.marginUnit}`}`,
            'border-radius': `${`${this.radius}${this.radiusUnit}`}`,
            'animation': `loading-scale 1s ${index * 0.1}s infinite cubic-bezier(.2,.68,.18,1.08)`,
            'animation-fill-mode': 'both'
        };
    }
}
ScaleLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-scale-loader',
                template: "<div class=\"loader\">\r\n  <div [ngStyle]=\"createScaleStyle(1)\"></div>\r\n  <div [ngStyle]=\"createScaleStyle(2)\"></div>\r\n  <div [ngStyle]=\"createScaleStyle(3)\"></div>\r\n  <div [ngStyle]=\"createScaleStyle(4)\"></div>\r\n  <div [ngStyle]=\"createScaleStyle(5)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-scale{0%,100%{transform:scaleY(1)}50%{transform:scaleY(.4)}}@keyframes loading-scale{0%,100%{transform:scaleY(1)}50%{transform:scaleY(.4)}}"]
            }] }
];
/** @nocollapse */
ScaleLoaderComponent.ctorParameters = () => [];
ScaleLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    width: [{ type: Input }],
    widthUnit: [{ type: Input }],
    height: [{ type: Input }],
    heightUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }],
    radius: [{ type: Input }],
    radiusUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ScaleLoaderComponent.prototype.color;
    /** @type {?} */
    ScaleLoaderComponent.prototype.width;
    /** @type {?} */
    ScaleLoaderComponent.prototype.widthUnit;
    /** @type {?} */
    ScaleLoaderComponent.prototype.height;
    /** @type {?} */
    ScaleLoaderComponent.prototype.heightUnit;
    /** @type {?} */
    ScaleLoaderComponent.prototype.margin;
    /** @type {?} */
    ScaleLoaderComponent.prototype.marginUnit;
    /** @type {?} */
    ScaleLoaderComponent.prototype.radius;
    /** @type {?} */
    ScaleLoaderComponent.prototype.radiusUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class RotateLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 15;
        this.sizeUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
    }
    /**
     * @return {?}
     */
    createRotateWrapperStyle() {
        return Object.assign({ 'display': 'inline-block' }, this.createBallStyle(), { 'position': 'relative', 'animation-fill-mode': 'both', 'animation': 'loading-rotate 1s 0s infinite cubic-bezier(.7,-.13,.22,.86)' });
    }
    /**
     * @return {?}
     */
    createRotateLongStyle() {
        return Object.assign({}, this.createBallStyle(), this.createPositionStyle(1));
    }
    /**
     * @return {?}
     */
    createRotateShortStyle() {
        return Object.assign({}, this.createBallStyle(), this.createPositionStyle(2));
    }
    /**
     * @private
     * @return {?}
     */
    createBallStyle() {
        return {
            'background-color': `${this.color}`,
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'margin': `${`${this.margin}${this.marginUnit}`}`,
            'border-radius': '100%'
        };
    }
    /**
     * @private
     * @param {?} index
     * @return {?}
     */
    createPositionStyle(index) {
        return {
            'opacity': '0.8',
            'position': 'absolute',
            'top': '0',
            'left': `${index % 2 ? -28 : 25}px`
        };
    }
}
RotateLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-rotate-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createRotateWrapperStyle()\">\r\n  <div [ngStyle]=\"createRotateLongStyle()\"></div>\r\n  <div [ngStyle]=\"createRotateShortStyle()\"></div>\r\n</div>\r\n",
                encapsulation: ViewEncapsulation.ShadowDom,
                styles: ["@-webkit-keyframes loading-rotate{0%{transform:rotate(0)}50%{transform:rotate(180deg)}100%{transform:rotate(360deg)}}@keyframes loading-rotate{0%{transform:rotate(0)}50%{transform:rotate(180deg)}100%{transform:rotate(360deg)}}"]
            }] }
];
/** @nocollapse */
RotateLoaderComponent.ctorParameters = () => [];
RotateLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    RotateLoaderComponent.prototype.color;
    /** @type {?} */
    RotateLoaderComponent.prototype.size;
    /** @type {?} */
    RotateLoaderComponent.prototype.sizeUnit;
    /** @type {?} */
    RotateLoaderComponent.prototype.margin;
    /** @type {?} */
    RotateLoaderComponent.prototype.marginUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class RiseLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 15;
        this.sizeUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createRiseStyle(index) {
        return {
            'display': 'inline-block',
            'border-radius': '100%',
            'background-color': `${this.color}`,
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'margin': `${`${this.margin}${this.marginUnit}`}`,
            'animation': `${index % 2 === 0 ? 'loading-rise-even' : 'loading-rise-odd'} 1s 0s infinite cubic-bezier(.15,.46,.9,.6)`,
            'animation-fill-mode': 'both'
        };
    }
}
RiseLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-rise-loader',
                template: "<div class=\"loader\">\r\n  <div [ngStyle]=\"createRiseStyle(1)\"></div>\r\n  <div [ngStyle]=\"createRiseStyle(2)\"></div>\r\n  <div [ngStyle]=\"createRiseStyle(3)\"></div>\r\n  <div [ngStyle]=\"createRiseStyle(4)\"></div>\r\n  <div [ngStyle]=\"createRiseStyle(5)\"></div>\r\n</div>\r\n",
                encapsulation: ViewEncapsulation.ShadowDom,
                styles: [":host{--riseAmount:30px}@-webkit-keyframes loading-rise-even{0%{transform:scale(1.1)}50%{transform:scale(.4)}75%{transform:translateY(var(--riseAmount))}100%{transform:translateY(0) scale(1)}}@keyframes loading-rise-even{0%{transform:scale(1.1)}50%{transform:scale(.4)}75%{transform:translateY(var(--riseAmount))}100%{transform:translateY(0) scale(1)}}@-webkit-keyframes loading-rise-odd{0%{transform:scale(.4)}50%{transform:scale(1.1)}75%{transform:translateY(calc(-1 * var(--riseAmount)))}100%{transform:translateY(0) scale(.75)}}@keyframes loading-rise-odd{0%{transform:scale(.4)}50%{transform:scale(1.1)}75%{transform:translateY(calc(-1 * var(--riseAmount)))}100%{transform:translateY(0) scale(.75)}}"]
            }] }
];
/** @nocollapse */
RiseLoaderComponent.ctorParameters = () => [];
RiseLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    RiseLoaderComponent.prototype.color;
    /** @type {?} */
    RiseLoaderComponent.prototype.size;
    /** @type {?} */
    RiseLoaderComponent.prototype.sizeUnit;
    /** @type {?} */
    RiseLoaderComponent.prototype.margin;
    /** @type {?} */
    RiseLoaderComponent.prototype.marginUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class RingLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 60;
        this.sizeUnit = 'px';
    }
    /**
     * @return {?}
     */
    createRingWrapperStyle() {
        return {
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'position': 'relative'
        };
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createRingStyle(index) {
        return {
            'position': 'absolute',
            'top': '0',
            'left': '0',
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'border': `${`${this.size / 10}${this.sizeUnit}`} solid ${this.color}`,
            'opacity': '0.4',
            'border-radius': '100%',
            'animation-fill-mode': 'forwards',
            'perspective': '800px',
            'animation': `${index === 1 ? 'loading-ring-right' : 'loading-ring-left'} 2s 0s infinite linear`
        };
    }
}
RingLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-ring-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createRingWrapperStyle()\">\r\n  <div [ngStyle]=\"createRingStyle(1)\"></div>\r\n  <div [ngStyle]=\"createRingStyle(2)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-ring-right{0%{transform:rotateX(0) rotateY(0) rotateZ(0)}100%{transform:rotateX(180deg) rotateY(360deg) rotateZ(360deg)}}@keyframes loading-ring-right{0%{transform:rotateX(0) rotateY(0) rotateZ(0)}100%{transform:rotateX(180deg) rotateY(360deg) rotateZ(360deg)}}@-webkit-keyframes loading-ring-left{0%{transform:rotateX(0) rotateY(0) rotateZ(0)}100%{transform:rotateX(360deg) rotateY(180deg) rotateZ(360deg)}}@keyframes loading-ring-left{0%{transform:rotateX(0) rotateY(0) rotateZ(0)}100%{transform:rotateX(360deg) rotateY(180deg) rotateZ(360deg)}}"]
            }] }
];
/** @nocollapse */
RingLoaderComponent.ctorParameters = () => [];
RingLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    RingLoaderComponent.prototype.color;
    /** @type {?} */
    RingLoaderComponent.prototype.size;
    /** @type {?} */
    RingLoaderComponent.prototype.sizeUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class PulseLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 15;
        this.sizeUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createPulseStyle(index) {
        return {
            'display': 'inline-block',
            'background-color': `${this.color}`,
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'margin': `${`${this.margin}${this.marginUnit}`}`,
            'border-radius': '100%',
            'animation': `loading-pulse 0.75s ${index * 0.12}s infinite cubic-bezier(.2,.68,.18,1.08)`,
            'animation-fill-mode': 'both'
        };
    }
}
PulseLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-pulse-loader',
                template: "<div class=\"loader\">\r\n  <div [ngStyle]=\"createPulseStyle(1)\"></div>\r\n  <div [ngStyle]=\"createPulseStyle(2)\"></div>\r\n  <div [ngStyle]=\"createPulseStyle(3)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-pulse{0%,80%{transform:scale(1);opacity:1}45%{transform:scale(.1);opacity:.7}}@keyframes loading-pulse{0%,80%{transform:scale(1);opacity:1}45%{transform:scale(.1);opacity:.7}}"]
            }] }
];
/** @nocollapse */
PulseLoaderComponent.ctorParameters = () => [];
PulseLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    PulseLoaderComponent.prototype.color;
    /** @type {?} */
    PulseLoaderComponent.prototype.size;
    /** @type {?} */
    PulseLoaderComponent.prototype.sizeUnit;
    /** @type {?} */
    PulseLoaderComponent.prototype.margin;
    /** @type {?} */
    PulseLoaderComponent.prototype.marginUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class PropagateLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 15;
        this.sizeUnit = 'px';
    }
    /**
     * @return {?}
     */
    createPropagateWrapperStyle() {
        return {
            'position': 'relative'
        };
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createPropagateStyle(index) {
        return {
            'position': 'absolute',
            'font-size': `${`${this.size / 3}${this.sizeUnit}`}`,
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'background': `${this.color}`,
            'border-radius': '50%',
            'animation': `${'loading-propagate-' + index} 1.5s  infinite`,
            'animation-fill-mode': 'forwards'
        };
    }
}
PropagateLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-propagate-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createPropagateWrapperStyle()\">\r\n  <div [ngStyle]=\"createPropagateStyle(0)\"></div>\r\n  <div [ngStyle]=\"createPropagateStyle(1)\"></div>\r\n  <div [ngStyle]=\"createPropagateStyle(2)\"></div>\r\n  <div [ngStyle]=\"createPropagateStyle(3)\"></div>\r\n  <div [ngStyle]=\"createPropagateStyle(4)\"></div>\r\n  <div [ngStyle]=\"createPropagateStyle(5)\"></div>\r\n</div>\r\n",
                styles: [":host{--oneRem:1rem;--threeRem:3rem;--fiveRem:5rem}@-webkit-keyframes loading-propagate-0{25%{transform:translateX(calc(-1 * var(--oneRem))) scale(.75)}50%{transform:translateX(calc(-1 * var(--threeRem))) scale(.6)}75%{transform:translateX(calc(-1 * var(--fiveRem))) scale(.5)}95%{transform:translateX(0) scale(1)}}@keyframes loading-propagate-0{25%{transform:translateX(calc(-1 * var(--oneRem))) scale(.75)}50%{transform:translateX(calc(-1 * var(--threeRem))) scale(.6)}75%{transform:translateX(calc(-1 * var(--fiveRem))) scale(.5)}95%{transform:translateX(0) scale(1)}}@-webkit-keyframes loading-propagate-1{25%{transform:translateX(calc(-1 * var(--oneRem))) scale(.75)}50%,75%{transform:translateX(calc(-1 * var(--threeRem))) scale(.6)}95%{transform:translateX(0) scale(1)}}@keyframes loading-propagate-1{25%{transform:translateX(calc(-1 * var(--oneRem))) scale(.75)}50%,75%{transform:translateX(calc(-1 * var(--threeRem))) scale(.6)}95%{transform:translateX(0) scale(1)}}@-webkit-keyframes loading-propagate-2{25%,75%{transform:translateX(calc(-1 * var(--oneRem))) scale(.75)}95%{transform:translateX(0) scale(1)}}@keyframes loading-propagate-2{25%,75%{transform:translateX(calc(-1 * var(--oneRem))) scale(.75)}95%{transform:translateX(0) scale(1)}}@-webkit-keyframes loading-propagate-3{25%,75%{transform:translateX(var(--oneRem)) scale(.75)}95%{transform:translateX(0) scale(1)}}@keyframes loading-propagate-3{25%,75%{transform:translateX(var(--oneRem)) scale(.75)}95%{transform:translateX(0) scale(1)}}@-webkit-keyframes loading-propagate-4{25%{transform:translateX(var(--oneRem)) scale(.75)}50%,75%{transform:translateX(var(--threeRem)) scale(.6)}95%{transform:translateX(0) scale(1)}}@keyframes loading-propagate-4{25%{transform:translateX(var(--oneRem)) scale(.75)}50%,75%{transform:translateX(var(--threeRem)) scale(.6)}95%{transform:translateX(0) scale(1)}}@-webkit-keyframes loading-propagate-5{25%{transform:translateX(var(--oneRem)) scale(.75)}50%{transform:translateX(var(--threeRem)) scale(.6)}75%{transform:translateX(var(--fiveRem)) scale(.5)}95%{transform:translateX(0) scale(1)}}@keyframes loading-propagate-5{25%{transform:translateX(var(--oneRem)) scale(.75)}50%{transform:translateX(var(--threeRem)) scale(.6)}75%{transform:translateX(var(--fiveRem)) scale(.5)}95%{transform:translateX(0) scale(1)}}"]
            }] }
];
/** @nocollapse */
PropagateLoaderComponent.ctorParameters = () => [];
PropagateLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    PropagateLoaderComponent.prototype.color;
    /** @type {?} */
    PropagateLoaderComponent.prototype.size;
    /** @type {?} */
    PropagateLoaderComponent.prototype.sizeUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class PacmanLoaderComponent {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.color = 'rgb(54, 215, 183)';
        this.size = 25;
        this.sizeUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        const { size, sizeUnit } = changes;
        if (size && !isNaN(size.currentValue) && sizeUnit && typeof sizeUnit.currentValue === 'string') {
            this.elementRef.nativeElement.style.setProperty('--tx', `${`${-4 * size.currentValue}${sizeUnit.currentValue}`}`);
            this.elementRef.nativeElement.style.setProperty('--ty', `${`${(-1 * size.currentValue) / 4}${sizeUnit.currentValue}`}`);
        }
    }
    /**
     * @return {?}
     */
    createPacmanWrapperStyle() {
        return {
            'position': 'relative',
            'font-size': '0',
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'width': `${`${this.size}${this.sizeUnit}`}`
        };
    }
    /**
     * @return {?}
     */
    createPacStyle() {
        return this.createPacManStyle(0);
    }
    /**
     * @return {?}
     */
    createManStyle() {
        return this.createPacManStyle(1);
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createBallStyle(index) {
        return {
            'width': `${`${this.size / 3}${this.sizeUnit}`}`,
            'height': `${`${this.size / 3}${this.sizeUnit}`}`,
            'background-color': `${this.color}`,
            'margin': `${`${this.margin}${this.marginUnit}`}`,
            'border-radius': '100%',
            'transform': `translate(0, ${`${-this.size / 4}${this.sizeUnit}`})`,
            'position': 'absolute',
            'top': `${this.size}px`,
            'left': `${`${this.size * 4}${this.sizeUnit}`}`,
            'animation': `loading-ball 1s ${index * 0.25}s infinite linear`,
            'animation-fill-mode': 'both'
        };
    }
    /**
     * @private
     * @param {?} index
     * @return {?}
     */
    createPacManStyle(index) {
        /** @type {?} */
        const s1 = this.s1();
        /** @type {?} */
        const s2 = this.s2();
        return {
            'width': '0',
            'height': '0',
            'border-right': `${s1}`,
            'border-top': `${index === 0 ? s1 : s2}`,
            'border-left': `${s2}`,
            'border-bottom': `${index === 0 ? s2 : s1}`,
            'border-radius': `${`${this.size}${this.sizeUnit}`}`,
            'position': 'absolute',
            'animation': `${'loading-pacman-' + index} 0.8s infinite ease-in-out`,
            'animation-fill-mode': 'both'
        };
    }
    /**
     * @private
     * @return {?}
     */
    s1() {
        return `${this.size}${this.sizeUnit} solid transparent`;
    }
    /**
     * @private
     * @return {?}
     */
    s2() {
        return `${this.size}${this.sizeUnit} solid ${this.color}`;
    }
}
PacmanLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-pacman-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createPacmanWrapperStyle()\">\r\n  <div [ngStyle]=\"createPacStyle()\"></div>\r\n  <div [ngStyle]=\"createManStyle()\"></div>\r\n  <div [ngStyle]=\"createBallStyle(2)\"></div>\r\n  <div [ngStyle]=\"createBallStyle(3)\"></div>\r\n  <div [ngStyle]=\"createBallStyle(4)\"></div>\r\n  <div [ngStyle]=\"createBallStyle(5)\"></div>\r\n</div>\r\n",
                styles: [":host{--tx:calc(-4 * 25px);--ty:calc((-1 * 25px) / 4)}@-webkit-keyframes loading-ball{75%{opacity:.7}100%{transform:translate(var(--tx),var(--ty))}}@keyframes loading-ball{75%{opacity:.7}100%{transform:translate(var(--tx),var(--ty))}}@-webkit-keyframes loading-pacman-0{0%{transform:rotate(0)}50%{transform:rotate(-44deg)}}@keyframes loading-pacman-0{0%{transform:rotate(0)}50%{transform:rotate(-44deg)}}@-webkit-keyframes loading-pacman-1{0%{transform:rotate(0)}50%{transform:rotate(44deg)}}@keyframes loading-pacman-1{0%{transform:rotate(0)}50%{transform:rotate(44deg)}}"]
            }] }
];
/** @nocollapse */
PacmanLoaderComponent.ctorParameters = () => [
    { type: ElementRef }
];
PacmanLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    PacmanLoaderComponent.prototype.color;
    /** @type {?} */
    PacmanLoaderComponent.prototype.size;
    /** @type {?} */
    PacmanLoaderComponent.prototype.sizeUnit;
    /** @type {?} */
    PacmanLoaderComponent.prototype.margin;
    /** @type {?} */
    PacmanLoaderComponent.prototype.marginUnit;
    /**
     * @type {?}
     * @private
     */
    PacmanLoaderComponent.prototype.elementRef;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class MoonLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 60;
        this.sizeUnit = 'px';
    }
    /**
     * @return {?}
     */
    createMoonWrapperStyle() {
        return {
            'position': 'relative',
            'width': `${`${this.size + ((this.size / 7) * 2)}${this.sizeUnit}`}`,
            'height': `${`${this.size + ((this.size / 7) * 2)}${this.sizeUnit}`}`,
            'animation': 'loading-moon 0.6s 0s infinite linear',
            'animation-fill-mode': 'forwards'
        };
    }
    /**
     * @return {?}
     */
    createMoonBallStyle() {
        return Object.assign({}, this.createBallStyle(this.size / 7), { 'background-color': `${this.color}`, 'opacity': '0.8', 'position': 'absolute', 'top': `${`${(this.size / 2) - (this.size / 14)}${this.sizeUnit}`}`, 'animation': 'loading-moon 0.6s 0s infinite linear', 'animation-fill-mode': 'forwards' });
    }
    /**
     * @return {?}
     */
    createMoonCircleStyle() {
        return Object.assign({}, this.createBallStyle(this.size), { 'border': `${this.size / 7}px solid ${this.color}`, 'opacity': '0.1' });
    }
    /**
     * @private
     * @param {?} size
     * @return {?}
     */
    createBallStyle(size) {
        return {
            'width': `${`${size}${this.sizeUnit}`}`,
            'height': `${`${size}${this.sizeUnit}`}`,
            'border-radius': '100%',
            'box-sizing': 'content-box'
        };
    }
}
MoonLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-moon-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createMoonWrapperStyle()\">\r\n  <div [ngStyle]=\"createMoonBallStyle()\"></div>\r\n  <div [ngStyle]=\"createMoonCircleStyle()\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-moon{100%{transform:rotate(360deg)}}@keyframes loading-moon{100%{transform:rotate(360deg)}}"]
            }] }
];
/** @nocollapse */
MoonLoaderComponent.ctorParameters = () => [];
MoonLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    MoonLoaderComponent.prototype.color;
    /** @type {?} */
    MoonLoaderComponent.prototype.size;
    /** @type {?} */
    MoonLoaderComponent.prototype.sizeUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const calculateRgba = (/**
 * @param {?} color
 * @param {?} opacity
 * @return {?}
 */
(color, opacity) => {
    if (color[0] === '#') {
        color = color.slice(1);
    }
    if (color.length === 3) {
        /** @type {?} */
        let res = '';
        color.split('').forEach((/**
         * @param {?} c
         * @return {?}
         */
        c => {
            res += c;
            res += c;
        }));
        color = res;
    }
    /** @type {?} */
    const rgbValues = color.match(/.{2}/g).map((/**
     * @param {?} hex
     * @return {?}
     */
    hex => parseInt(hex, 16))).join(', ');
    return `rgba(${rgbValues}, ${opacity})`;
});

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class HashLoaderComponent {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.color = '#36d7b7';
        this.size = 50;
        this.sizeUnit = 'px';
        this.rgba = (/**
         * @param {?} color
         * @return {?}
         */
        (color) => calculateRgba(color, 0.75));
        this.thickness = (/**
         * @param {?} size
         * @return {?}
         */
        (size) => size / 5);
    }
    /**
     * @return {?}
     */
    createHashWrapperStyle() {
        return {
            'position': 'relative',
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'transform': 'rotate(165deg)'
        };
    }
    /**
     * @param {?} index
     * @param {?} color
     * @param {?} size
     * @param {?} sizeUnit
     * @return {?}
     */
    createHashStyle(index, color, size, sizeUnit) {
        this.setStyleVariables(color, size, sizeUnit);
        return {
            'display': 'block',
            'position': 'absolute',
            'content': '',
            'top': '50%',
            'left': '50%',
            'width': `${`${this.size / 5}${this.sizeUnit}`}`,
            'height': `${`${this.size / 5}${this.sizeUnit}`}`,
            'border-radius': `${`${this.size / 10}${this.sizeUnit}`}`,
            'transform': 'translate(-50%, -50%)',
            'animation-fill-mode': 'none',
            'animation': `${index === 1 ? 'loading-hash-before' : 'loading-hash-after'} 2s infinite`
        };
    }
    /**
     * @private
     * @param {?} size
     * @return {?}
     */
    lat(size) {
        return (this.size - this.thickness(size)) / 2;
    }
    /**
     * @private
     * @param {?} size
     * @return {?}
     */
    offset(size) {
        return this.lat(size) - this.thickness(size);
    }
    /**
     * @private
     * @param {?} color
     * @param {?} size
     * @param {?} sizeUnit
     * @return {?}
     */
    setStyleVariables(color, size, sizeUnit) {
        /** @type {?} */
        const rgba = this.rgba(color);
        /** @type {?} */
        const lat = this.lat(size);
        /** @type {?} */
        const thickness = this.thickness(size);
        /** @type {?} */
        const offset = this.offset(size);
        this.elementRef.nativeElement.style.setProperty('--color', rgba);
        this.elementRef.nativeElement.style.setProperty('--size', `${`${size}${sizeUnit}`}`);
        this.elementRef.nativeElement.style.setProperty('--lat', `${`${lat}px`}`);
        this.elementRef.nativeElement.style.setProperty('--thickness', `${`${thickness}px`}`);
        this.elementRef.nativeElement.style.setProperty('--offset', `${`${offset}px`}`);
    }
}
HashLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-hash-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createHashWrapperStyle()\">\r\n      <div [ngStyle]=\"createHashStyle(1,color, size, sizeUnit)\"></div>\r\n      <div [ngStyle]=\"createHashStyle(2, color, size, sizeUnit)\"></div>\r\n</div>\r\n",
                styles: [":host{--color:rgba(54, 215, 183, 0.75);--thickness:10px;--size:50px;--lat:20px;--offset:10px}@-webkit-keyframes loading-hash-before{0%{width:var(--thickness);box-shadow:var(--lat) calc(-1 * var(--offset)) var(--color),calc(-1 * var(--lat)) var(--offset) var(--color)}35%{width:var(--size);box-shadow:0 calc(-1 * var(--offset)) var(--color),0 var(--offset) var(--color)}70%{width:var(--thickness);box-shadow:calc(-1 * var(--lat)) calc(-1 * var(--offset)) var(--color),var(--lat) var(--offset) var(--color)}100%{box-shadow:var(--lat) calc(-1 * var(--offset)) var(--color),calc(-1 * var(--lat)) var(--offset) var(--color)}}@keyframes loading-hash-before{0%{width:var(--thickness);box-shadow:var(--lat) calc(-1 * var(--offset)) var(--color),calc(-1 * var(--lat)) var(--offset) var(--color)}35%{width:var(--size);box-shadow:0 calc(-1 * var(--offset)) var(--color),0 var(--offset) var(--color)}70%{width:var(--thickness);box-shadow:calc(-1 * var(--lat)) calc(-1 * var(--offset)) var(--color),var(--lat) var(--offset) var(--color)}100%{box-shadow:var(--lat) calc(-1 * var(--offset)) var(--color),calc(-1 * var(--lat)) var(--offset) var(--color)}}@-webkit-keyframes loading-hash-after{0%{height:var(--thickness);box-shadow:var(--offset) var(--lat) var(--color),calc(-1 * var(--offset)) calc(-1 * var(--lat)) var(--color)}35%{height:var(--size);box-shadow:var(--offset) 0 var(--color),calc(-1 * var(--offset)) 0 var(--color)}70%{height:var(--thickness);box-shadow:var(--offset) calc(-1 * var(--lat)) var(--color),calc(-1 * var(--offset)) var(--lat) var(--color)}100%{box-shadow:var(--offset) var(--lat) var(--color),calc(-1 * var(--offset)) calc(-1 * var(--lat)) var(--color)}}@keyframes loading-hash-after{0%{height:var(--thickness);box-shadow:var(--offset) var(--lat) var(--color),calc(-1 * var(--offset)) calc(-1 * var(--lat)) var(--color)}35%{height:var(--size);box-shadow:var(--offset) 0 var(--color),calc(-1 * var(--offset)) 0 var(--color)}70%{height:var(--thickness);box-shadow:var(--offset) calc(-1 * var(--lat)) var(--color),calc(-1 * var(--offset)) var(--lat) var(--color)}100%{box-shadow:var(--offset) var(--lat) var(--color),calc(-1 * var(--offset)) calc(-1 * var(--lat)) var(--color)}}"]
            }] }
];
/** @nocollapse */
HashLoaderComponent.ctorParameters = () => [
    { type: ElementRef }
];
HashLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    HashLoaderComponent.prototype.color;
    /** @type {?} */
    HashLoaderComponent.prototype.size;
    /** @type {?} */
    HashLoaderComponent.prototype.sizeUnit;
    /**
     * @type {?}
     * @private
     */
    HashLoaderComponent.prototype.rgba;
    /**
     * @type {?}
     * @private
     */
    HashLoaderComponent.prototype.thickness;
    /**
     * @type {?}
     * @private
     */
    HashLoaderComponent.prototype.elementRef;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class GridLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 15;
        this.sizeUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
    }
    /**
     * @return {?}
     */
    createGridWrapperStyle() {
        return {
            'width': `${`${(this.size * 3) + (this.margin * 6)}${this.sizeUnit}`}`,
            'font-size': '0'
        };
    }
    /**
     * @param {?} rand
     * @return {?}
     */
    createGridStyle(rand) {
        return {
            'display': 'inline-block',
            'background-color': `${this.color}`,
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'margin': `${`${this.margin}${this.marginUnit}`}`,
            'border-radius': '100%',
            'animation-fill-mode': 'both',
            'animation': `loading-grid ${(rand / 100) + 0.6}s ${(rand / 100) - 0.2}s infinite ease`
        };
    }
    /**
     * @param {?} top
     * @return {?}
     */
    random(top) {
        return Math.random() * top;
    }
}
GridLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-grid-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createGridWrapperStyle()\">\r\n  <div [ngStyle]=\"createGridStyle(random(100))\"></div>\r\n  <div [ngStyle]=\"createGridStyle(random(100))\"></div>\r\n  <div [ngStyle]=\"createGridStyle(random(100))\"></div>\r\n  <div [ngStyle]=\"createGridStyle(random(100))\"></div>\r\n  <div [ngStyle]=\"createGridStyle(random(100))\"></div>\r\n  <div [ngStyle]=\"createGridStyle(random(100))\"></div>\r\n  <div [ngStyle]=\"createGridStyle(random(100))\"></div>\r\n  <div [ngStyle]=\"createGridStyle(random(100))\"></div>\r\n  <div [ngStyle]=\"createGridStyle(random(100))\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-grid{0%{transform:scale(1)}50%{transform:scale(.5);opacity:.7}100%{transform:scale(1);opacity:1}}@keyframes loading-grid{0%{transform:scale(1)}50%{transform:scale(.5);opacity:.7}100%{transform:scale(1);opacity:1}}"]
            }] }
];
/** @nocollapse */
GridLoaderComponent.ctorParameters = () => [];
GridLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    GridLoaderComponent.prototype.color;
    /** @type {?} */
    GridLoaderComponent.prototype.size;
    /** @type {?} */
    GridLoaderComponent.prototype.sizeUnit;
    /** @type {?} */
    GridLoaderComponent.prototype.margin;
    /** @type {?} */
    GridLoaderComponent.prototype.marginUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class FadeLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.height = 15;
        this.heightUnit = 'px';
        this.width = 5;
        this.widthUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
        this.radius = 2;
        this.radiusUnit = 'px';
        this.radiusFactor = 20;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    createFadeWrapperStyle() {
        return {
            'position': 'relative',
            'font-size': '0',
            'top': `${this.radiusFactor}px`,
            'left': `${this.radiusFactor}px`,
            'width': `${this.radiusFactor * 3}px`,
            'height': `${this.radiusFactor * 3}px`
        };
    }
    /**
     * @return {?}
     */
    createFadeStyleA() {
        return Object.assign({}, this.createFadeStyle(1), { 'top': `${this.radiusFactor}px`, 'left': '0' });
    }
    /**
     * @return {?}
     */
    createFadeStyleB() {
        return Object.assign({}, this.createFadeStyle(2), { 'top': `${this.createQuarter()}px`, 'left': `${this.createQuarter()}px`, 'transform': 'rotate(-45deg)' });
    }
    /**
     * @return {?}
     */
    createFadeStyleC() {
        return Object.assign({}, this.createFadeStyle(3), { 'top': '0', 'left': `${this.radiusFactor}px`, 'transform': 'rotate(90deg)' });
    }
    /**
     * @return {?}
     */
    createFadeStyleD() {
        return Object.assign({}, this.createFadeStyle(4), { 'top': `${-1 * this.createQuarter()}px`, 'left': `${this.createQuarter()}px`, 'transform': 'rotate(45deg)' });
    }
    /**
     * @return {?}
     */
    createFadeStyleE() {
        return Object.assign({}, this.createFadeStyle(5), { 'top': `${-1 * this.radiusFactor}px`, 'left': '0' });
    }
    /**
     * @return {?}
     */
    createFadeStyleF() {
        return Object.assign({}, this.createFadeStyle(6), { 'top': `${-1 * this.createQuarter()}px`, 'left': `${-1 * this.createQuarter()}px`, 'transform': 'rotate(-45deg)' });
    }
    /**
     * @return {?}
     */
    createFadeStyleG() {
        return Object.assign({}, this.createFadeStyle(7), { 'top': '0', 'left': `${-1 * this.radiusFactor}px`, 'transform': 'rotate(90deg)' });
    }
    /**
     * @return {?}
     */
    createFadeStyleH() {
        return Object.assign({}, this.createFadeStyle(8), { 'top': `${this.createQuarter()}px`, 'left': `${-1 * this.createQuarter()}px`, 'transform': 'rotate(45deg)' });
    }
    /**
     * @private
     * @param {?} index
     * @return {?}
     */
    createFadeStyle(index) {
        return {
            'position': 'absolute',
            'width': `${`${this.width}${this.widthUnit}`}`,
            'height': `${`${this.height}${this.heightUnit}`}`,
            'margin': `${`${this.margin}${this.marginUnit}`}`,
            'background-color': `${this.color}`,
            'border-radius': `${`${this.radius}${this.radiusUnit}`}`,
            'transition': '2s',
            'animation-fill-mode': 'both',
            'animation': `loading-fade 1.2s ${index * 0.12}s infinite ease-in-out`
        };
    }
    /**
     * @private
     * @return {?}
     */
    createQuarter() {
        return (this.radiusFactor / 2) + (this.radiusFactor / 5.5);
    }
}
FadeLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-fade-loader',
                template: "<div class=\"loading\" [ngStyle]=\"createFadeWrapperStyle()\">\r\n  <div [ngStyle]=\"createFadeStyleA()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleB()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleC()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleD()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleE()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleF()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleG()\"></div>\r\n  <div [ngStyle]=\"createFadeStyleH()\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-fade{50%{opacity:.3}100%{opacity:1}}@keyframes loading-fade{50%{opacity:.3}100%{opacity:1}}"]
            }] }
];
/** @nocollapse */
FadeLoaderComponent.ctorParameters = () => [];
FadeLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    height: [{ type: Input }],
    heightUnit: [{ type: Input }],
    width: [{ type: Input }],
    widthUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }],
    radius: [{ type: Input }],
    radiusUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    FadeLoaderComponent.prototype.color;
    /** @type {?} */
    FadeLoaderComponent.prototype.height;
    /** @type {?} */
    FadeLoaderComponent.prototype.heightUnit;
    /** @type {?} */
    FadeLoaderComponent.prototype.width;
    /** @type {?} */
    FadeLoaderComponent.prototype.widthUnit;
    /** @type {?} */
    FadeLoaderComponent.prototype.margin;
    /** @type {?} */
    FadeLoaderComponent.prototype.marginUnit;
    /** @type {?} */
    FadeLoaderComponent.prototype.radius;
    /** @type {?} */
    FadeLoaderComponent.prototype.radiusUnit;
    /**
     * @type {?}
     * @private
     */
    FadeLoaderComponent.prototype.radiusFactor;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DotLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 60;
        this.sizeUnit = 'px';
    }
    /**
     * @return {?}
     */
    createDotWrapperStyle() {
        return {
            'position': 'relative',
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'animation-fill-mode': 'forwards',
            'animation': 'loading-rotate 2s 0s infinite linear'
        };
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createDotStyle(index) {
        return {
            'position': 'absolute',
            'top': `${index % 2 ? '0' : 'auto'}`,
            'bottom': `${index % 2 ? 'auto' : '0'}`,
            'height': `${`${this.size / 2}${this.sizeUnit}`}`,
            'width': `${`${this.size / 2}${this.sizeUnit}`}`,
            'background-color': `${this.color}`,
            'border-radius': '100%',
            'animation-fill-mode': 'forwards',
            'animation': `loading-bounce 2s ${index === 2 ? '-1s' : '0s'} infinite linear`
        };
    }
}
DotLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-dot-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createDotWrapperStyle()\">\r\n  <div [ngStyle]=\"createDotStyle(1)\"></div>\r\n  <div [ngStyle]=\"createDotStyle(2)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-rotate{100%{transform:rotate(360deg)}}@keyframes loading-rotate{100%{transform:rotate(360deg)}}@-webkit-keyframes loading-bounce{0%,100%{transform:scale(0)}50%{transform:scale(1)}}@keyframes loading-bounce{0%,100%{transform:scale(0)}50%{transform:scale(1)}}"]
            }] }
];
/** @nocollapse */
DotLoaderComponent.ctorParameters = () => [];
DotLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    DotLoaderComponent.prototype.color;
    /** @type {?} */
    DotLoaderComponent.prototype.size;
    /** @type {?} */
    DotLoaderComponent.prototype.sizeUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ClipLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 35;
        this.sizeUnit = 'px';
    }
    /**
     * @return {?}
     */
    createClipStyle() {
        return {
            'background': 'transparent !important',
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'border-radius': '100%',
            'border': '2px solid',
            'border-color': `${this.color}`,
            'border-bottom-color': 'transparent',
            'display': 'inline-block',
            'animation': ' loading-clip 0.75s 0s infinite linear',
            'animation-fill-mode': 'both'
        };
    }
}
ClipLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-clip-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createClipStyle()\"></div>\r\n",
                styles: ["@-webkit-keyframes loading-clip{0%{transform:rotate(0) scale(1)}50%{transform:rotate(180deg) scale(.8)}100%{transform:rotate(360deg) scale(1)}}@keyframes loading-clip{0%{transform:rotate(0) scale(1)}50%{transform:rotate(180deg) scale(.8)}100%{transform:rotate(360deg) scale(1)}}"]
            }] }
];
/** @nocollapse */
ClipLoaderComponent.ctorParameters = () => [];
ClipLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ClipLoaderComponent.prototype.color;
    /** @type {?} */
    ClipLoaderComponent.prototype.size;
    /** @type {?} */
    ClipLoaderComponent.prototype.sizeUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ClimbingBoxLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 15;
        this.sizeUnit = 'px';
    }
    /**
     * @return {?}
     */
    createClimbingBoxContainerStyle() {
        return {
            'position': 'relative',
            'width': '7.1em',
            'height': '7.1em'
        };
    }
    /**
     * @return {?}
     */
    createClimbingBoxWrapperStyle() {
        return {
            'position': 'absolute',
            'top': '50%',
            'left': '50%',
            'margin-top': '-2.7em',
            'margin-left': '-2.7em',
            'width': '5.4em',
            'height': '5.4em',
            'font-size': `${`${this.size}${this.sizeUnit}`}`
        };
    }
    /**
     * @return {?}
     */
    createClimbingBoxStyle() {
        return {
            'position': 'absolute',
            'left': '0',
            'bottom': '-0.1em',
            'height': '1em',
            'width': '1em',
            'background-color': 'transparent',
            'border-radius': '15%',
            'border': `0.25em solid ${this.color}`,
            'transform': 'translate(0, -1em) rotate(-45deg)',
            'animation-fill-mode': 'both',
            'animation': 'loading-climbing-box 2.5s infinite cubic-bezier(.79, 0, .47, .97)'
        };
    }
    /**
     * @return {?}
     */
    createHillStyle() {
        return {
            'position': 'absolute',
            'width': '7.1em',
            'height': '7.1em',
            'top': '1.7em',
            'left': '1.7em',
            'border-left': `0.25em solid ${this.color}`,
            'transform': 'rotate(45deg)'
        };
    }
}
ClimbingBoxLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-climbing-box-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createClimbingBoxContainerStyle()\">\r\n  <div [ngStyle]=\"createClimbingBoxWrapperStyle()\">\r\n    <div [ngStyle]=\"createClimbingBoxStyle()\"></div>\r\n    <div [ngStyle]=\"createHillStyle()\"></div>\r\n  </div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-climbing-box{0%{transform:translate(0,-1em) rotate(-45deg)}5%{transform:translate(0,-1em) rotate(-50deg)}20%{transform:translate(1em,-2em) rotate(47deg)}25%{transform:translate(1em,-2em) rotate(45deg)}30%{transform:translate(1em,-2em) rotate(40deg)}45%{transform:translate(2em,-3em) rotate(137deg)}50%{transform:translate(2em,-3em) rotate(135deg)}55%{transform:translate(2em,-3em) rotate(130deg)}70%{transform:translate(3em,-4em) rotate(217deg)}75%{transform:translate(3em,-4em) rotate(220deg)}100%{transform:translate(0,-1em) rotate(-225deg)}}@keyframes loading-climbing-box{0%{transform:translate(0,-1em) rotate(-45deg)}5%{transform:translate(0,-1em) rotate(-50deg)}20%{transform:translate(1em,-2em) rotate(47deg)}25%{transform:translate(1em,-2em) rotate(45deg)}30%{transform:translate(1em,-2em) rotate(40deg)}45%{transform:translate(2em,-3em) rotate(137deg)}50%{transform:translate(2em,-3em) rotate(135deg)}55%{transform:translate(2em,-3em) rotate(130deg)}70%{transform:translate(3em,-4em) rotate(217deg)}75%{transform:translate(3em,-4em) rotate(220deg)}100%{transform:translate(0,-1em) rotate(-225deg)}}"]
            }] }
];
/** @nocollapse */
ClimbingBoxLoaderComponent.ctorParameters = () => [];
ClimbingBoxLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ClimbingBoxLoaderComponent.prototype.color;
    /** @type {?} */
    ClimbingBoxLoaderComponent.prototype.size;
    /** @type {?} */
    ClimbingBoxLoaderComponent.prototype.sizeUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class CircleLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 50;
        this.sizeUnit = 'px';
    }
    /**
     * @return {?}
     */
    createCircleWrapperStyle() {
        return {
            'position': 'relative',
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`
        };
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createCircleStyle(index) {
        return {
            'position': 'absolute',
            'height': `${`${this.size * (1 - (index / 10))}${this.sizeUnit}`}`,
            'width': `${`${this.size * (1 - (index / 10))}${this.sizeUnit}`}`,
            'border': `1px solid ${this.color}`,
            'border-radius': '100%',
            'transition': '2s',
            'border-bottom': 'none',
            'border-right': 'none',
            'top': `${(index * 0.7 * 2.5)}%`,
            'left': `${(index * 0.35 * 2.5)}%`,
            'animation-fill-mode': '',
            'animation': `loading-circle 1s ${index * 0.2}s infinite linear`
        };
    }
}
CircleLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-circle-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createCircleWrapperStyle()\">\r\n  <div [ngStyle]=\"createCircleStyle(0)\"></div>\r\n  <div [ngStyle]=\"createCircleStyle(1)\"></div>\r\n  <div [ngStyle]=\"createCircleStyle(2)\"></div>\r\n  <div [ngStyle]=\"createCircleStyle(3)\"></div>\r\n  <div [ngStyle]=\"createCircleStyle(4)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-circle{0%{transform:rotate(0)}50%{transform:rotate(180deg)}100%{transform:rotate(360deg)}}@keyframes loading-circle{0%{transform:rotate(0)}50%{transform:rotate(180deg)}100%{transform:rotate(360deg)}}"]
            }] }
];
/** @nocollapse */
CircleLoaderComponent.ctorParameters = () => [];
CircleLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    CircleLoaderComponent.prototype.color;
    /** @type {?} */
    CircleLoaderComponent.prototype.size;
    /** @type {?} */
    CircleLoaderComponent.prototype.sizeUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BounceLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 60;
        this.sizeUnit = 'px';
    }
    /**
     * @return {?}
     */
    createBounceWrapperStyle() {
        return {
            'position': 'relative',
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`
        };
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createBounceStyle(index) {
        return {
            'position': 'absolute',
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'background-color': `${this.color}`,
            'border-radius': '100%',
            'opacity': '0.6',
            'top': '0',
            'left': '0',
            'animation-fill-mode': 'both',
            'animation': `loading-bounce 2.1s ${index === 1 ? '1s' : '0s'} infinite ease-in-out`
        };
    }
}
BounceLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-bounce-loader',
                template: "<div class=\"loader\" [ngStyle]=\"createBounceWrapperStyle()\">\r\n  <div [ngStyle]=\"createBounceStyle(1)\"></div>\r\n  <div [ngStyle]=\"createBounceStyle(2)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-bounce{0%,100%{transform:scale(0)}50%{transform:scale(1)}}@keyframes loading-bounce{0%,100%{transform:scale(0)}50%{transform:scale(1)}}"]
            }] }
];
/** @nocollapse */
BounceLoaderComponent.ctorParameters = () => [];
BounceLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    BounceLoaderComponent.prototype.color;
    /** @type {?} */
    BounceLoaderComponent.prototype.size;
    /** @type {?} */
    BounceLoaderComponent.prototype.sizeUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BeatLoaderComponent {
    constructor() {
        this.color = 'rgb(54, 215, 183)';
        this.size = 15;
        this.sizeUnit = 'px';
        this.margin = 2;
        this.marginUnit = 'px';
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createBeatStyle(index) {
        return {
            'display': 'inline-block',
            'background-color': `${this.color}`,
            'width': `${`${this.size}${this.sizeUnit}`}`,
            'height': `${`${this.size}${this.sizeUnit}`}`,
            'margin': `${`${this.margin}${this.marginUnit}`}`,
            'border-radius': '100%',
            'animation': `loading-beat 0.7s ${index % 2 ? '0s' : '0.35s'} infinite linear`,
            'animation-fill-mode': 'both'
        };
    }
}
BeatLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-beat-loader',
                template: "<div class=\"loader\">\r\n  <div [ngStyle]=\"createBeatStyle(1)\"></div>\r\n  <div [ngStyle]=\"createBeatStyle(2)\"></div>\r\n  <div [ngStyle]=\"createBeatStyle(3)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-beat{50%{transform:scale(.75);opacity:.2}100%{transform:scale(1);opacity:1}}@keyframes loading-beat{50%{transform:scale(.75);opacity:.2}100%{transform:scale(1);opacity:1}}"]
            }] }
];
/** @nocollapse */
BeatLoaderComponent.ctorParameters = () => [];
BeatLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    size: [{ type: Input }],
    sizeUnit: [{ type: Input }],
    margin: [{ type: Input }],
    marginUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    BeatLoaderComponent.prototype.color;
    /** @type {?} */
    BeatLoaderComponent.prototype.size;
    /** @type {?} */
    BeatLoaderComponent.prototype.sizeUnit;
    /** @type {?} */
    BeatLoaderComponent.prototype.margin;
    /** @type {?} */
    BeatLoaderComponent.prototype.marginUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BarLoaderComponent {
    constructor() {
        this.color = '#36d7b7';
        this.width = 100;
        this.widthUnit = 'px';
        this.height = 4;
        this.heightUnit = 'px';
    }
    /**
     * @return {?}
     */
    createBarWrapperStyle() {
        return {
            'position': 'relative',
            'width': `${`${this.width}${this.widthUnit}`}`,
            'height': `${`${this.height}${this.heightUnit}`}`,
            'overflow': 'hidden',
            'background-color': `${calculateRgba(this.color, 0.2)}`,
            'background-clip': 'padding-box',
        };
    }
    /**
     * @param {?} index
     * @return {?}
     */
    createBarStyle(index) {
        return {
            'display': 'block',
            'position': 'absolute',
            'height': `${`${this.height}${this.heightUnit}`}`,
            'overflow': 'hidden',
            'background-color': `${this.color}`,
            'background-clip': 'padding-box',
            'border-radius': '2px',
            'will-change': 'left, right',
            'animation-fill-mode': 'forwards',
            'animation': `${index === 1 ? 'loading-long' : 'loading-short'} 2.1s ${index === 2 ? '1.15s' : ''}
                    ${index === 1 ? 'cubic-bezier(0.65, 0.815, 0.735, 0.395)' : 'cubic-bezier(0.165, 0.84, 0.44, 1)'} infinite`
        };
    }
}
BarLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-bar-loader',
                template: "<div class=\"loading\" [ngStyle]=\"createBarWrapperStyle()\">\r\n  <div [ngStyle]=\"createBarStyle(1)\"></div>\r\n  <div [ngStyle]=\"createBarStyle(2)\"></div>\r\n</div>\r\n",
                styles: ["@-webkit-keyframes loading-long{0%{left:-35%;right:100%}100%,60%{left:100%;right:-90%}}@keyframes loading-long{0%{left:-35%;right:100%}100%,60%{left:100%;right:-90%}}@-webkit-keyframes loading-short{0%{left:-200%;right:100%}100%,60%{left:107%;right:-8%}}@keyframes loading-short{0%{left:-200%;right:100%}100%,60%{left:107%;right:-8%}}"]
            }] }
];
/** @nocollapse */
BarLoaderComponent.ctorParameters = () => [];
BarLoaderComponent.propDecorators = {
    color: [{ type: Input }],
    width: [{ type: Input }],
    widthUnit: [{ type: Input }],
    height: [{ type: Input }],
    heightUnit: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    BarLoaderComponent.prototype.color;
    /** @type {?} */
    BarLoaderComponent.prototype.width;
    /** @type {?} */
    BarLoaderComponent.prototype.widthUnit;
    /** @type {?} */
    BarLoaderComponent.prototype.height;
    /** @type {?} */
    BarLoaderComponent.prototype.heightUnit;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const components = [
    SyncLoaderComponent,
    SquareLoaderComponent,
    SkewLoaderComponent,
    ScaleLoaderComponent,
    RotateLoaderComponent,
    RiseLoaderComponent,
    RingLoaderComponent,
    PulseLoaderComponent,
    PropagateLoaderComponent,
    PacmanLoaderComponent,
    MoonLoaderComponent,
    HashLoaderComponent,
    GridLoaderComponent,
    FadeLoaderComponent,
    DotLoaderComponent,
    ClipLoaderComponent,
    ClimbingBoxLoaderComponent,
    CircleLoaderComponent,
    BounceLoaderComponent,
    BeatLoaderComponent,
    BarLoaderComponent
];
class NgxSpinnersModule {
}
NgxSpinnersModule.decorators = [
    { type: NgModule, args: [{
                declarations: components,
                imports: [CommonModule],
                exports: components
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgxSpinnersModule, SyncLoaderComponent as ɵa, SquareLoaderComponent as ɵb, SkewLoaderComponent as ɵc, ScaleLoaderComponent as ɵd, RotateLoaderComponent as ɵe, RiseLoaderComponent as ɵf, RingLoaderComponent as ɵg, PulseLoaderComponent as ɵh, PropagateLoaderComponent as ɵi, PacmanLoaderComponent as ɵj, MoonLoaderComponent as ɵk, HashLoaderComponent as ɵl, GridLoaderComponent as ɵm, FadeLoaderComponent as ɵn, DotLoaderComponent as ɵo, ClipLoaderComponent as ɵp, ClimbingBoxLoaderComponent as ɵq, CircleLoaderComponent as ɵr, BounceLoaderComponent as ɵs, BeatLoaderComponent as ɵt, BarLoaderComponent as ɵu };
//# sourceMappingURL=ngx-spinners.js.map
