{
  "version": 3,
  "file": "ngx-bootstrap-alert.umd.min.js",
  "sources": [
    "ng://ngx-bootstrap-alert/out/src/app/modules/ngx-bootstrap-alert/bootstrap-alert.service.ts",
    "ng://ngx-bootstrap-alert/out/src/app/modules/ngx-bootstrap-alert/bootstrap-alert.component.ts",
    "ng://ngx-bootstrap-alert/out/src/app/modules/ngx-bootstrap-alert/bootstrap-alert.module.ts",
    "ng://ngx-bootstrap-alert/out/src/app/modules/ngx-bootstrap-alert/bootstrap-alert.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\r\nimport { BootstrapAlert } from './bootstrap-alert';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { BehaviorSubject } from 'rxjs/Rx';\r\nimport { AlertType } from './bootstrap-alert';\r\n\r\n@Injectable()\r\nexport class BootstrapAlertService {\r\n  public _bootstrapAlert: BehaviorSubject<BootstrapAlert>;\r\n\r\n  constructor() {\r\n    this._bootstrapAlert = new BehaviorSubject<BootstrapAlert>(null);\r\n  }\r\n\r\n  public alert(alert: BootstrapAlert) {\r\n    this._bootstrapAlert.next(alert);\r\n  }\r\n}\r\n",
    "import { Component, ElementRef, Input } from '@angular/core';\r\nimport { BootstrapAlert, BootstrapAlertInterface } from './bootstrap-alert';\r\nimport { BootstrapAlertService } from './bootstrap-alert.service';\r\nimport {\r\n  trigger,\r\n  state,\r\n  transition,\r\n  style,\r\n  animate\r\n} from '@angular/animations';\r\n@Component({\r\n  selector: 'bootstrap-alert',\r\n  template: `<div [ngClass]=\"alertPosition\" class=\"bootstrap-alert col-lg-4\">\r\n\t<div *ngFor=\"let bootstrapAlert of bootstrapAlerts\" id=\"{{bootstrapAlert.uuid}}\" class=\"alert alert-dismissable mb-2\" [ngClass]=\"bootstrapAlert.type\" [@alertVisible]=\"bootstrapAlert.state\">\r\n\t\t<button type=\"button\" class=\"close\" (click)=\"destroy(bootstrapAlert.uuid)\" >x</button>\r\n\t\t{{bootstrapAlert.message}}\r\n\t</div>\r\n</div>\r\n`,\r\n  styles: [`.bootstrap-alert{z-index:2000;position:fixed}.top-left{left:1rem;top:1rem}.top-center{margin:auto;left:0;right:0;top:1rem}.top-right{right:1rem;top:1rem}.bottom-left{left:1rem;bottom:1rem}.bottom-center{margin:auto;left:0;right:0;bottom:1rem}.bottom-right{right:1rem;bottom:1rem}`],\r\n  animations: [\r\n    trigger('alertVisible', [\r\n      state('visible', style({ opacity: 1 })),\r\n      state('destroyed', style({ opacity: 0 })),\r\n      transition('visible => destroyed', animate('600ms')),\r\n      transition('destroyed => visible', animate('600ms'))\r\n    ])\r\n  ]\r\n})\r\nexport class BootstrapAlertComponent {\r\n  @Input()\r\n  public alertPosition: string;\r\n\r\n  public bootstrapAlerts: Array<BootstrapAlertInterface>;\r\n\r\n  constructor(private bootstrapAlertService: BootstrapAlertService) {\r\n    this.bootstrapAlerts = [];\r\n    this.bootstrapAlertService._bootstrapAlert.subscribe(\r\n      (bootstrapAlert: BootstrapAlertInterface) => {\r\n        this.show(bootstrapAlert);\r\n      }\r\n    );\r\n  }\r\n\r\n  readonly DEFAULT_TIMEOUT = 3000;\r\n  readonly FADE_TIMEOUT = 600;\r\n\r\n  public show(bootstrapAlert: BootstrapAlertInterface): void {\r\n    if (!bootstrapAlert) {\r\n      return;\r\n    }\r\n\r\n    this.bootstrapAlerts.unshift(bootstrapAlert);\r\n\r\n    setTimeout(() => {\r\n      this.destroy(bootstrapAlert.uuid);\r\n    }, bootstrapAlert.timeoutInMiliSeconds ? bootstrapAlert.timeoutInMiliSeconds : this.DEFAULT_TIMEOUT);\r\n  }\r\n\r\n  public fade(bootstrapAlert): void {\r\n    bootstrapAlert.state = 'destroyed';\r\n  }\r\n\r\n  public destroy(uuid: string): void {\r\n    const bootstrapAlertIndex = this.findIndex(\r\n      this.bootstrapAlerts,\r\n      'uuid',\r\n      uuid\r\n    );\r\n    if (bootstrapAlertIndex !== -1) {\r\n      const bootstrapAlert = this.bootstrapAlerts[bootstrapAlertIndex];\r\n      bootstrapAlert.state = 'destroyed';\r\n      setTimeout(() => {\r\n        this.bootstrapAlerts.splice(bootstrapAlertIndex, 1);\r\n      }, this.FADE_TIMEOUT);\r\n    }\r\n  }\r\n\r\n  public findIndex(array, attr, value): number {\r\n    for (let i = 0; i < array.length; i += 1) {\r\n      if (array[i][attr] === value) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n}\r\n",
    "import { NgModule } from '@angular/core';\r\nimport { BootstrapAlertService } from './bootstrap-alert.service';\r\nimport { BootstrapAlertComponent } from './bootstrap-alert.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BootstrapAlert } from './bootstrap-alert';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, BrowserAnimationsModule],\r\n  declarations: [BootstrapAlertComponent],\r\n  exports: [BootstrapAlertComponent],\r\n  providers: [BootstrapAlertService]\r\n})\r\nexport class BootstrapAlertModule {}\r\n",
    "import { v4 } from 'uuid';\r\nexport interface BootstrapAlertInterface {\r\n  message: string;\r\n  timeoutInMiliSeconds: number;\r\n  type: AlertType;\r\n  uuid: string;\r\n  state: string;\r\n}\r\n\r\nexport type AlertType =\r\n  | 'alert-danger'\r\n  | 'alert-success'\r\n  | 'alert-info'\r\n  | 'alert-warning';\r\n\r\nexport class BootstrapAlert implements BootstrapAlertInterface {\r\n  private _message: string;\r\n  private _timeoutInMiliSeconds: number;\r\n  private _type: AlertType;\r\n  private _uuid: string;\r\n  private _state: string;\r\n  constructor(message: string, type: AlertType) {\r\n    this._uuid = v4();\r\n    this._type = type;\r\n    this._message = message;\r\n    this._state = 'visible';\r\n  }\r\n\r\n  public get message(): string {\r\n    return this._message;\r\n  }\r\n\r\n  public set message(message: string) {\r\n    this._message = message;\r\n  }\r\n\r\n  public get timeoutInMiliSeconds(): number {\r\n    return this._timeoutInMiliSeconds;\r\n  }\r\n\r\n  public set timeoutInMiliSeconds(timeoutInMiliSeconds: number) {\r\n    this._timeoutInMiliSeconds = timeoutInMiliSeconds;\r\n  }\r\n\r\n  public get type(): AlertType {\r\n    return this._type;\r\n  }\r\n\r\n  public set type(type: AlertType) {\r\n    this._type = type;\r\n  }\r\n\r\n  public get uuid(): string {\r\n    return this._uuid;\r\n  }\r\n\r\n  public get state(): string {\r\n    return this._state;\r\n  }\r\n\r\n  public set state(state: string) {\r\n    this._state = state;\r\n  }\r\n}\r\n"
  ],
  "names": [
    "BootstrapAlertService",
    "this",
    "_bootstrapAlert",
    "BehaviorSubject",
    "prototype",
    "alert",
    "next",
    "type",
    "Injectable",
    "BootstrapAlertComponent",
    "bootstrapAlertService",
    "_this",
    "DEFAULT_TIMEOUT",
    "FADE_TIMEOUT",
    "bootstrapAlerts",
    "subscribe",
    "bootstrapAlert",
    "show",
    "unshift",
    "setTimeout",
    "destroy",
    "uuid",
    "timeoutInMiliSeconds",
    "fade",
    "state",
    "bootstrapAlertIndex",
    "findIndex",
    "splice",
    "array",
    "attr",
    "value",
    "i",
    "length",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "animations",
    "trigger",
    "style",
    "opacity",
    "transition",
    "animate",
    "alertPosition",
    "Input",
    "BootstrapAlertModule",
    "NgModule",
    "imports",
    "CommonModule",
    "BrowserAnimationsModule",
    "declarations",
    "exports",
    "providers",
    "BootstrapAlert",
    "message",
    "_uuid",
    "v4",
    "_type",
    "_message",
    "_state",
    "Object",
    "defineProperty",
    "get",
    "set",
    "_timeoutInMiliSeconds"
  ],
  "mappings": "8pBAAA,IAAAA,EAAA,WAWE,SAAFA,IACIC,KAAKC,gBAAkB,IAAIC,EAAAA,gBAAgC,aAGtDH,EAATI,UAAAC,MAAS,SAAMA,GACXJ,KAAKC,gBAAgBI,KAAKD,MAhB9B,kBAOAE,KAACC,EAAAA,mDCPD,IAAAC,EAAA,WAmCE,SAAFA,EAAsBC,GAApB,IAAFC,EAAAV,KAAsBA,KAAtBS,sBAAsBA,EAStBT,KAAAW,gBAA6B,IAC7BX,KAAAY,aAA0B,IATtBZ,KAAKa,mBACLb,KAAKS,sBAAsBR,gBAAgBa,UACzC,SAACC,GACCL,EAAKM,KAAKD,YAQTP,EAATL,UAAAa,KAAS,SAAKD,GAAL,IAATL,EAAAV,KACSe,IAILf,KAAKa,gBAAgBI,QAAQF,GAE7BG,WAAW,WACTR,EAAKS,QAAQJ,EAAeK,OAC3BL,EAAeM,qBAAuBN,EAAeM,qBAAuBrB,KAAKW,mBAG/EH,EAATL,UAAAmB,KAAS,SAAKP,GACVA,EAAeQ,MAAQ,aAGlBf,EAATL,UAAAgB,QAAS,SAAQC,GAAR,IAATV,EAAAV,KACUwB,EAAsBxB,KAAKyB,UAC/BzB,KAAKa,gBACL,OACAO,IAE2B,IAAzBI,IACqBxB,KAAKa,gBAAgBW,GAC7BD,MAAQ,YACvBL,WAAW,WACTR,EAAKG,gBAAgBa,OAAOF,EAAqB,IAChDxB,KAAKY,gBAILJ,EAATL,UAAAsB,UAAS,SAAUE,EAAOC,EAAMC,GAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,GAAK,EACrC,GAAIH,EAAMG,GAAGF,KAAUC,EACrB,OAAOC,EAGX,OAAQ,KApFZ,kBAUAxB,KAAC0B,EAAAA,UAADC,OACEC,SAAU,kBACVC,SAAU,oZAOVC,QAAS,2RACTC,YACEC,EAAAA,QAAQ,gBACNf,EAAAA,MAAM,UAAWgB,EAAAA,OAAQC,QAAS,KAClCjB,EAAAA,MAAM,YAAagB,EAAAA,OAAQC,QAAS,KACpCC,EAAAA,WAAW,uBAAwBC,EAAAA,QAAQ,UAC3CD,EAAAA,WAAW,uBAAwBC,EAAAA,QAAQ,qDAvBjDpC,KAASP,uBA4BT4C,gBAAArC,KAAGsC,EAAAA,SC9BH,IAAAC,EAAA,4BAOAvC,KAACwC,EAAAA,SAADb,OACEc,SAAUC,EAAAA,aAAcC,EAAAA,yBACxBC,cAAe1C,GACf2C,SAAU3C,GACV4C,WAAYrD,6CCId,IAAAsD,EAAA,WAME,SAAFA,EAAcC,EAAiBhD,GAC3BN,KAAKuD,MAAQC,EAAAA,KACbxD,KAAKyD,MAAQnD,EACbN,KAAK0D,SAAWJ,EAChBtD,KAAK2D,OAAS,UAsClB,OAnCAC,OAAAC,eAAaR,EAAblD,UAAA,WAAA2D,IAAA,WACI,OAAO9D,KAAK0D,UAGhBK,IAAA,SAAqBT,GACjBtD,KAAK0D,SAAWJ,mCAGpBM,OAAAC,eAAaR,EAAblD,UAAA,wBAAA2D,IAAA,WACI,OAAO9D,KAAKgE,uBAGhBD,IAAA,SAAkC1C,GAC9BrB,KAAKgE,sBAAwB3C,mCAGjCuC,OAAAC,eAAaR,EAAblD,UAAA,QAAA2D,IAAA,WACI,OAAO9D,KAAKyD,OAGhBM,IAAA,SAAkBzD,GACdN,KAAKyD,MAAQnD,mCAGjBsD,OAAAC,eAAaR,EAAblD,UAAA,QAAA2D,IAAA,WACI,OAAO9D,KAAKuD,uCAGhBK,OAAAC,eAAaR,EAAblD,UAAA,SAAA2D,IAAA,WACI,OAAO9D,KAAK2D,QAGhBI,IAAA,SAAmBxC,GACfvB,KAAK2D,OAASpC,mCAElB8B,EAhDA"
}
